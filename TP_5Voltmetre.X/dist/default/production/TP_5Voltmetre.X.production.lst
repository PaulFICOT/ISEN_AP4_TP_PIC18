

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb  5 12:00:26 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 05/05/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F46K22 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     _ANSELA	set	3896
    65  0000                     _LATD	set	3980
    66  0000                     _PORTD	set	3971
    67  0000                     _LATDbits	set	3980
    68  0000                     _TRISDbits	set	3989
    69  0000                     _ADRESH	set	4036
    70  0000                     _ADRESL	set	4035
    71  0000                     _ADCON2	set	4032
    72  0000                     _ADCON1	set	4033
    73  0000                     _ADCON0	set	4034
    74  0000                     _TRISAbits	set	3986
    75  0000                     _TRISA	set	3986
    76  0000                     _ADFM	set	32263
    77                           
    78                           	psect	smallconst
    79  001000                     __psmallconst:
    80                           	callstack 0
    81  001000  00                 	db	0
    82  001001  30                 	db	48	;'0'
    83  001002  31                 	db	49	;'1'
    84  001003  32                 	db	50	;'2'
    85  001004  33                 	db	51	;'3'
    86  001005  34                 	db	52	;'4'
    87  001006  35                 	db	53	;'5'
    88  001007  36                 	db	54	;'6'
    89  001008  37                 	db	55	;'7'
    90  001009  38                 	db	56	;'8'
    91  00100A  39                 	db	57	;'9'
    92  00100B  41                 	db	65	;'A'
    93  00100C  42                 	db	66	;'B'
    94  00100D  43                 	db	67	;'C'
    95  00100E  44                 	db	68	;'D'
    96  00100F  45                 	db	69	;'E'
    97  001010  46                 	db	70	;'F'
    98  001011  00                 	db	0
    99  001012                     STR_1:
   100  001012  20                 	db	32
   101  001013  54                 	db	84	;'T'
   102  001014  65                 	db	101	;'e'
   103  001015  6E                 	db	110	;'n'
   104  001016  73                 	db	115	;'s'
   105  001017  69                 	db	105	;'i'
   106  001018  6F                 	db	111	;'o'
   107  001019  6E                 	db	110	;'n'
   108  00101A  3A                 	db	58	;':'
   109  00101B  20                 	db	32
   110  00101C  00                 	db	0
   111  00101D                     STR_2:
   112  00101D  56                 	db	86	;'V'
   113  00101E  00                 	db	0
   114  00101F  00                 	db	0	; dummy byte at the end
   115  0000                     
   116                           ; #config settings
   117                           
   118                           	psect	cinit
   119  001FA8                     __pcinit:
   120                           	callstack 0
   121  001FA8                     start_initialization:
   122                           	callstack 0
   123  001FA8                     __initialization:
   124                           	callstack 0
   125  001FA8                     end_of_initialization:
   126                           	callstack 0
   127  001FA8                     __end_of__initialization:
   128                           	callstack 0
   129  001FA8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   130  001FAA  6EF8               	movwf	tblptru,c
   131  001FAC  0100               	movlb	0
   132  001FAE  EF2F  F00E         	goto	_main	;jump to C main() function
   133                           
   134                           	psect	cstackBANK0
   135  000060                     __pcstackBANK0:
   136                           	callstack 0
   137  000060                     _main$893:
   138                           	callstack 0
   139                           
   140                           ; 4 bytes @ 0x0
   141  000060                     	ds	4
   142                           
   143                           	psect	cstackCOMRAM
   144  000001                     __pcstackCOMRAM:
   145                           	callstack 0
   146  000001                     ?___lwdiv:
   147                           	callstack 0
   148  000001                     ?___xxtofl:
   149                           	callstack 0
   150  000001                     ReadByte@status:
   151                           	callstack 0
   152  000001                     WriteNibble@data:
   153                           	callstack 0
   154  000001                     ___lwdiv@dividend:
   155                           	callstack 0
   156  000001                     ___xxtofl@val:
   157                           	callstack 0
   158                           
   159                           ; 4 bytes @ 0x0
   160  000001                     	ds	1
   161  000002                     ??_WriteNibble:
   162  000002                     WaitLCD@status:
   163                           	callstack 0
   164                           
   165                           ; 1 bytes @ 0x1
   166  000002                     	ds	1
   167  000003                     WriteNibble@cmd:
   168                           	callstack 0
   169  000003                     ___lwdiv@divisor:
   170                           	callstack 0
   171                           
   172                           ; 2 bytes @ 0x2
   173  000003                     	ds	1
   174  000004                     ??_LCDInit:
   175  000004                     WriteByte@data:
   176                           	callstack 0
   177                           
   178                           ; 1 bytes @ 0x3
   179  000004                     	ds	1
   180  000005                     ??___xxtofl:
   181  000005                     WriteByte@cmd:
   182                           	callstack 0
   183  000005                     ___lwdiv@quotient:
   184                           	callstack 0
   185                           
   186                           ; 2 bytes @ 0x4
   187  000005                     	ds	1
   188  000006                     LCDGoto@row:
   189                           	callstack 0
   190  000006                     LCDPutChar@data:
   191                           	callstack 0
   192                           
   193                           ; 1 bytes @ 0x5
   194  000006                     	ds	1
   195  000007                     ??_LCDGoto:
   196  000007                     ___lwdiv@counter:
   197                           	callstack 0
   198  000007                     LCDWriteStr@string:
   199                           	callstack 0
   200                           
   201                           ; 2 bytes @ 0x6
   202  000007                     	ds	2
   203  000009                     ??_LCDWriteStr:
   204  000009                     ___xxtofl@sign:
   205                           	callstack 0
   206  000009                     _LCDGoto$230:
   207                           	callstack 0
   208                           
   209                           ; 2 bytes @ 0x8
   210  000009                     	ds	1
   211  00000A                     ___xxtofl@exp:
   212                           	callstack 0
   213                           
   214                           ; 1 bytes @ 0x9
   215  00000A                     	ds	1
   216  00000B                     LCDGoto@column:
   217                           	callstack 0
   218  00000B                     LCDWriteStr@i:
   219                           	callstack 0
   220  00000B                     ___xxtofl@arg:
   221                           	callstack 0
   222                           
   223                           ; 4 bytes @ 0xA
   224  00000B                     	ds	4
   225  00000F                     ?___fldiv:
   226                           	callstack 0
   227  00000F                     ___fldiv@b:
   228                           	callstack 0
   229                           
   230                           ; 4 bytes @ 0xE
   231  00000F                     	ds	4
   232  000013                     ___fldiv@a:
   233                           	callstack 0
   234                           
   235                           ; 4 bytes @ 0x12
   236  000013                     	ds	4
   237  000017                     ??___fldiv:
   238                           
   239                           ; 1 bytes @ 0x16
   240  000017                     	ds	4
   241  00001B                     ___fldiv@rem:
   242                           	callstack 0
   243                           
   244                           ; 4 bytes @ 0x1A
   245  00001B                     	ds	4
   246  00001F                     ___fldiv@sign:
   247                           	callstack 0
   248                           
   249                           ; 1 bytes @ 0x1E
   250  00001F                     	ds	1
   251  000020                     ___fldiv@new_exp:
   252                           	callstack 0
   253                           
   254                           ; 2 bytes @ 0x1F
   255  000020                     	ds	2
   256  000022                     ___fldiv@grs:
   257                           	callstack 0
   258                           
   259                           ; 4 bytes @ 0x21
   260  000022                     	ds	4
   261  000026                     ___fldiv@bexp:
   262                           	callstack 0
   263                           
   264                           ; 1 bytes @ 0x25
   265  000026                     	ds	1
   266  000027                     ___fldiv@aexp:
   267                           	callstack 0
   268                           
   269                           ; 1 bytes @ 0x26
   270  000027                     	ds	1
   271  000028                     ?___flmul:
   272                           	callstack 0
   273  000028                     ___flmul@b:
   274                           	callstack 0
   275                           
   276                           ; 4 bytes @ 0x27
   277  000028                     	ds	4
   278  00002C                     ___flmul@a:
   279                           	callstack 0
   280                           
   281                           ; 4 bytes @ 0x2B
   282  00002C                     	ds	4
   283  000030                     ??___flmul:
   284                           
   285                           ; 1 bytes @ 0x2F
   286  000030                     	ds	4
   287  000034                     ___flmul@sign:
   288                           	callstack 0
   289                           
   290                           ; 1 bytes @ 0x33
   291  000034                     	ds	1
   292  000035                     ___flmul@grs:
   293                           	callstack 0
   294                           
   295                           ; 4 bytes @ 0x34
   296  000035                     	ds	4
   297  000039                     ___flmul@aexp:
   298                           	callstack 0
   299                           
   300                           ; 1 bytes @ 0x38
   301  000039                     	ds	1
   302  00003A                     ___flmul@bexp:
   303                           	callstack 0
   304                           
   305                           ; 1 bytes @ 0x39
   306  00003A                     	ds	1
   307  00003B                     ___flmul@prod:
   308                           	callstack 0
   309                           
   310                           ; 4 bytes @ 0x3A
   311  00003B                     	ds	4
   312  00003F                     ___flmul@temp:
   313                           	callstack 0
   314                           
   315                           ; 2 bytes @ 0x3E
   316  00003F                     	ds	2
   317  000041                     ?___fltol:
   318                           	callstack 0
   319  000041                     ___fltol@f1:
   320                           	callstack 0
   321                           
   322                           ; 4 bytes @ 0x40
   323  000041                     	ds	4
   324  000045                     ??___fltol:
   325                           
   326                           ; 1 bytes @ 0x44
   327  000045                     	ds	4
   328  000049                     ___fltol@sign1:
   329                           	callstack 0
   330                           
   331                           ; 1 bytes @ 0x48
   332  000049                     	ds	1
   333  00004A                     ___fltol@exp1:
   334                           	callstack 0
   335                           
   336                           ; 1 bytes @ 0x49
   337  00004A                     	ds	1
   338  00004B                     ?___lwmod:
   339                           	callstack 0
   340  00004B                     ___lwmod@dividend:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0x4A
   344  00004B                     	ds	2
   345  00004D                     ___lwmod@divisor:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0x4C
   349  00004D                     	ds	2
   350  00004F                     ___lwmod@counter:
   351                           	callstack 0
   352                           
   353                           ; 1 bytes @ 0x4E
   354  00004F                     	ds	1
   355  000050                     LCDWriteFloat@row:
   356                           	callstack 0
   357                           
   358                           ; 1 bytes @ 0x4F
   359  000050                     	ds	1
   360  000051                     LCDWriteFloat@value:
   361                           	callstack 0
   362                           
   363                           ; 4 bytes @ 0x50
   364  000051                     	ds	4
   365  000055                     LCDWriteFloat@column:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0x54
   369  000055                     	ds	1
   370  000056                     LCDWriteFloat@string:
   371                           	callstack 0
   372                           
   373                           ; 5 bytes @ 0x55
   374  000056                     	ds	5
   375  00005B                     LCDWriteFloat@integer:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x5A
   379  00005B                     	ds	2
   380  00005D                     
   381                           ; 1 bytes @ 0x5C
   382 ;;
   383 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   384 ;;
   385 ;; *************** function _main *****************
   386 ;; Defined at:
   387 ;;		line 75 in file "main.c"
   388 ;; Parameters:    Size  Location     Type
   389 ;;		None
   390 ;; Auto vars:     Size  Location     Type
   391 ;;		None
   392 ;; Return value:  Size  Location     Type
   393 ;;                  1    wreg      void 
   394 ;; Registers used:
   395 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   396 ;; Tracked objects:
   397 ;;		On entry : 0/0
   398 ;;		On exit  : 0/0
   399 ;;		Unchanged: 0/0
   400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   402 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   404 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   405 ;;Total ram usage:        4 bytes
   406 ;; Hardware stack levels required when called:    5
   407 ;; This function calls:
   408 ;;		_LCDInit
   409 ;;		_LCDWriteFloat
   410 ;;		_LCDWriteStr
   411 ;;		___fldiv
   412 ;;		___flmul
   413 ;;		___xxtofl
   414 ;; This function is called by:
   415 ;;		Startup code after reset
   416 ;; This function uses a non-reentrant model
   417 ;;
   418                           
   419                           	psect	text0
   420  001C5E                     __ptext0:
   421                           	callstack 0
   422  001C5E                     _main:
   423                           	callstack 26
   424  001C5E                     
   425                           ;main.c: 77:     TRISA = 0;
   426  001C5E  0E00               	movlw	0
   427  001C60  6E92               	movwf	146,c	;volatile
   428  001C62                     
   429                           ;main.c: 78:     TRISAbits.RA0 = 1;
   430  001C62  8092               	bsf	146,0,c	;volatile
   431                           
   432                           ;main.c: 80:     ANSELA = 0x01;
   433  001C64  0E01               	movlw	1
   434  001C66  010F               	movlb	15	; () banked
   435  001C68  6F38               	movwf	56,b	;volatile
   436                           
   437                           ;main.c: 82:     ADCON0 = 0x01;
   438  001C6A  0E01               	movlw	1
   439  001C6C  6EC2               	movwf	194,c	;volatile
   440                           
   441                           ;main.c: 83:     ADCON1 = 0x00;
   442  001C6E  0E00               	movlw	0
   443  001C70  6EC1               	movwf	193,c	;volatile
   444                           
   445                           ;main.c: 84:     ADCON2 = 0x20;
   446  001C72  0E20               	movlw	32
   447  001C74  6EC0               	movwf	192,c	;volatile
   448  001C76                     
   449                           ; BSR set to: 15
   450                           ;main.c: 85:     ADFM = 0x00;
   451  001C76  9EC0               	bcf	4032,7,c	;volatile
   452  001C78                     
   453                           ; BSR set to: 15
   454                           ;main.c: 86:     LCDInit();
   455  001C78  EC4F  F00D         	call	_LCDInit	;wreg free
   456  001C7C                     
   457                           ;main.c: 87:     LCDWriteStr(" Tension: ");
   458  001C7C  0E12               	movlw	low STR_1
   459  001C7E  6E07               	movwf	LCDWriteStr@string^0,c
   460  001C80  0E10               	movlw	high STR_1
   461  001C82  6E08               	movwf	(LCDWriteStr@string+1)^0,c
   462  001C84  EC93  F00E         	call	_LCDWriteStr	;wreg free
   463  001C88                     l1909:
   464                           
   465                           ;main.c: 90:         ADCON0 = 0x03;
   466  001C88  0E03               	movlw	3
   467  001C8A  6EC2               	movwf	194,c	;volatile
   468  001C8C                     
   469                           ;main.c: 91:         ADRESL =0;
   470  001C8C  0E00               	movlw	0
   471  001C8E  6EC3               	movwf	195,c	;volatile
   472  001C90                     
   473                           ;main.c: 92:         LCDWriteFloat(0,1,(float) ADRESH/255 * 5);
   474  001C90  0E00               	movlw	0
   475  001C92  6E13               	movwf	___fldiv@a^0,c
   476  001C94  0E00               	movlw	0
   477  001C96  6E14               	movwf	(___fldiv@a+1)^0,c
   478  001C98  0E7F               	movlw	127
   479  001C9A  6E15               	movwf	(___fldiv@a+2)^0,c
   480  001C9C  0E43               	movlw	67
   481  001C9E  6E16               	movwf	(___fldiv@a+3)^0,c
   482  001CA0  50C4               	movf	196,w,c	;volatile
   483  001CA2  6E01               	movwf	___xxtofl@val^0,c
   484  001CA4  6A02               	clrf	(___xxtofl@val+1)^0,c
   485  001CA6  6A03               	clrf	(___xxtofl@val+2)^0,c
   486  001CA8  6A04               	clrf	(___xxtofl@val+3)^0,c
   487  001CAA  0E00               	movlw	0
   488  001CAC  ECF2  F00B         	call	___xxtofl
   489  001CB0  C001  F00F         	movff	?___xxtofl,___fldiv@b
   490  001CB4  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
   491  001CB8  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
   492  001CBC  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
   493  001CC0  EC25  F00A         	call	___fldiv	;wreg free
   494  001CC4  C00F  F028         	movff	?___fldiv,___flmul@b
   495  001CC8  C010  F029         	movff	?___fldiv+1,___flmul@b+1
   496  001CCC  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
   497  001CD0  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
   498  001CD4  0E00               	movlw	0
   499  001CD6  6E2C               	movwf	___flmul@a^0,c
   500  001CD8  0E00               	movlw	0
   501  001CDA  6E2D               	movwf	(___flmul@a+1)^0,c
   502  001CDC  0EA0               	movlw	160
   503  001CDE  6E2E               	movwf	(___flmul@a+2)^0,c
   504  001CE0  0E40               	movlw	64
   505  001CE2  6E2F               	movwf	(___flmul@a+3)^0,c
   506  001CE4  EC10  F008         	call	___flmul	;wreg free
   507  001CE8  C028  F060         	movff	?___flmul,_main$893
   508  001CEC  C029  F061         	movff	?___flmul+1,_main$893+1
   509  001CF0  C02A  F062         	movff	?___flmul+2,_main$893+2
   510  001CF4  C02B  F063         	movff	?___flmul+3,_main$893+3
   511  001CF8                     
   512                           ;main.c: 92:         LCDWriteFloat(0,1,(float) ADRESH/255 * 5);
   513  001CF8  0E01               	movlw	1
   514  001CFA  6E50               	movwf	LCDWriteFloat@row^0,c
   515  001CFC  C060  F051         	movff	_main$893,LCDWriteFloat@value
   516  001D00  C061  F052         	movff	_main$893+1,LCDWriteFloat@value+1
   517  001D04  C062  F053         	movff	_main$893+2,LCDWriteFloat@value+2
   518  001D08  C063  F054         	movff	_main$893+3,LCDWriteFloat@value+3
   519  001D0C  0E00               	movlw	0
   520  001D0E  ECC3  F00D         	call	_LCDWriteFloat
   521  001D12                     
   522                           ;main.c: 93:         LCDWriteStr("V");
   523  001D12  0E1D               	movlw	low STR_2
   524  001D14  6E07               	movwf	LCDWriteStr@string^0,c
   525  001D16  0E10               	movlw	high STR_2
   526  001D18  6E08               	movwf	(LCDWriteStr@string+1)^0,c
   527  001D1A  EC93  F00E         	call	_LCDWriteStr	;wreg free
   528  001D1E  EF44  F00E         	goto	l1909
   529  001D22  EF00  F000         	goto	start
   530  001D26                     __end_of_main:
   531                           	callstack 0
   532                           
   533 ;; *************** function ___xxtofl *****************
   534 ;; Defined at:
   535 ;;		line 10 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/xxtofl.c"
   536 ;; Parameters:    Size  Location     Type
   537 ;;  sign            1    wreg     unsigned char 
   538 ;;  val             4    0[COMRAM] long 
   539 ;; Auto vars:     Size  Location     Type
   540 ;;  sign            1    8[COMRAM] unsigned char 
   541 ;;  arg             4   10[COMRAM] unsigned long 
   542 ;;  exp             1    9[COMRAM] unsigned char 
   543 ;; Return value:  Size  Location     Type
   544 ;;                  4    0[COMRAM] unsigned char 
   545 ;; Registers used:
   546 ;;		wreg, status,2, status,0
   547 ;; Tracked objects:
   548 ;;		On entry : 0/0
   549 ;;		On exit  : 0/0
   550 ;;		Unchanged: 0/0
   551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   552 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   553 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   554 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   555 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   556 ;;Total ram usage:       14 bytes
   557 ;; Hardware stack levels used:    1
   558 ;; This function calls:
   559 ;;		Nothing
   560 ;; This function is called by:
   561 ;;		_main
   562 ;; This function uses a non-reentrant model
   563 ;;
   564                           
   565                           	psect	text1
   566  0017E4                     __ptext1:
   567                           	callstack 0
   568  0017E4                     ___xxtofl:
   569                           	callstack 30
   570                           
   571                           ;incstack = 0
   572                           ;___xxtofl@sign stored from wreg
   573  0017E4  6E09               	movwf	___xxtofl@sign^0,c
   574  0017E6  5009               	movf	___xxtofl@sign^0,w,c
   575  0017E8  B4D8               	btfsc	status,2,c
   576  0017EA  EFF9  F00B         	goto	u1401
   577  0017EE  EFFB  F00B         	goto	u1400
   578  0017F2                     u1401:
   579  0017F2  EF1D  F00C         	goto	l759
   580  0017F6                     u1400:
   581  0017F6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
   582  0017F8  EF02  F00C         	goto	u1410
   583  0017FC  EF00  F00C         	goto	u1411
   584  001800                     u1411:
   585  001800  EF1D  F00C         	goto	l759
   586  001804                     u1410:
   587  001804  C001  F005         	movff	___xxtofl@val,??___xxtofl
   588  001808  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
   589  00180C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
   590  001810  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
   591  001814  1E05               	comf	??___xxtofl^0,f,c
   592  001816  1E06               	comf	(??___xxtofl+1)^0,f,c
   593  001818  1E07               	comf	(??___xxtofl+2)^0,f,c
   594  00181A  1E08               	comf	(??___xxtofl+3)^0,f,c
   595  00181C  2A05               	incf	??___xxtofl^0,f,c
   596  00181E  0E00               	movlw	0
   597  001820  2206               	addwfc	(??___xxtofl+1)^0,f,c
   598  001822  2207               	addwfc	(??___xxtofl+2)^0,f,c
   599  001824  2208               	addwfc	(??___xxtofl+3)^0,f,c
   600  001826  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
   601  00182A  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
   602  00182E  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
   603  001832  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
   604  001836  EF25  F00C         	goto	l1859
   605  00183A                     l759:
   606  00183A  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
   607  00183E  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
   608  001842  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
   609  001846  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
   610  00184A                     l1859:
   611  00184A  5001               	movf	___xxtofl@val^0,w,c
   612  00184C  1002               	iorwf	(___xxtofl@val+1)^0,w,c
   613  00184E  1003               	iorwf	(___xxtofl@val+2)^0,w,c
   614  001850  1004               	iorwf	(___xxtofl@val+3)^0,w,c
   615  001852  A4D8               	btfss	status,2,c
   616  001854  EF2E  F00C         	goto	u1421
   617  001858  EF30  F00C         	goto	u1420
   618  00185C                     u1421:
   619  00185C  EF3A  F00C         	goto	l1865
   620  001860                     u1420:
   621  001860  0E00               	movlw	0
   622  001862  6E01               	movwf	?___xxtofl^0,c
   623  001864  0E00               	movlw	0
   624  001866  6E02               	movwf	(?___xxtofl+1)^0,c
   625  001868  0E00               	movlw	0
   626  00186A  6E03               	movwf	(?___xxtofl+2)^0,c
   627  00186C  0E00               	movlw	0
   628  00186E  6E04               	movwf	(?___xxtofl+3)^0,c
   629  001870  EFCB  F00C         	goto	l762
   630  001874                     l1865:
   631  001874  0E96               	movlw	150
   632  001876  6E0A               	movwf	___xxtofl@exp^0,c
   633  001878  EF44  F00C         	goto	l1869
   634  00187C                     l1867:
   635  00187C  2A0A               	incf	___xxtofl@exp^0,f,c
   636  00187E  90D8               	bcf	status,0,c
   637  001880  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
   638  001882  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
   639  001884  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
   640  001886  320B               	rrcf	___xxtofl@arg^0,f,c
   641  001888                     l1869:
   642  001888  0E00               	movlw	0
   643  00188A  140B               	andwf	___xxtofl@arg^0,w,c
   644  00188C  6E05               	movwf	??___xxtofl^0,c
   645  00188E  0E00               	movlw	0
   646  001890  140C               	andwf	(___xxtofl@arg+1)^0,w,c
   647  001892  6E06               	movwf	(??___xxtofl+1)^0,c
   648  001894  0E00               	movlw	0
   649  001896  140D               	andwf	(___xxtofl@arg+2)^0,w,c
   650  001898  6E07               	movwf	(??___xxtofl+2)^0,c
   651  00189A  0EFE               	movlw	254
   652  00189C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
   653  00189E  6E08               	movwf	(??___xxtofl+3)^0,c
   654  0018A0  5005               	movf	??___xxtofl^0,w,c
   655  0018A2  1006               	iorwf	(??___xxtofl+1)^0,w,c
   656  0018A4  1007               	iorwf	(??___xxtofl+2)^0,w,c
   657  0018A6  1008               	iorwf	(??___xxtofl+3)^0,w,c
   658  0018A8  A4D8               	btfss	status,2,c
   659  0018AA  EF59  F00C         	goto	u1431
   660  0018AE  EF5B  F00C         	goto	u1430
   661  0018B2                     u1431:
   662  0018B2  EF3E  F00C         	goto	l1867
   663  0018B6                     u1430:
   664  0018B6  EF69  F00C         	goto	l766
   665  0018BA                     l1871:
   666  0018BA  2A0A               	incf	___xxtofl@exp^0,f,c
   667  0018BC  0E01               	movlw	1
   668  0018BE  260B               	addwf	___xxtofl@arg^0,f,c
   669  0018C0  0E00               	movlw	0
   670  0018C2  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
   671  0018C4  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
   672  0018C6  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
   673  0018C8  90D8               	bcf	status,0,c
   674  0018CA  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
   675  0018CC  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
   676  0018CE  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
   677  0018D0  320B               	rrcf	___xxtofl@arg^0,f,c
   678  0018D2                     l766:
   679  0018D2  0E00               	movlw	0
   680  0018D4  140B               	andwf	___xxtofl@arg^0,w,c
   681  0018D6  6E05               	movwf	??___xxtofl^0,c
   682  0018D8  0E00               	movlw	0
   683  0018DA  140C               	andwf	(___xxtofl@arg+1)^0,w,c
   684  0018DC  6E06               	movwf	(??___xxtofl+1)^0,c
   685  0018DE  0E00               	movlw	0
   686  0018E0  140D               	andwf	(___xxtofl@arg+2)^0,w,c
   687  0018E2  6E07               	movwf	(??___xxtofl+2)^0,c
   688  0018E4  0EFF               	movlw	255
   689  0018E6  140E               	andwf	(___xxtofl@arg+3)^0,w,c
   690  0018E8  6E08               	movwf	(??___xxtofl+3)^0,c
   691  0018EA  5005               	movf	??___xxtofl^0,w,c
   692  0018EC  1006               	iorwf	(??___xxtofl+1)^0,w,c
   693  0018EE  1007               	iorwf	(??___xxtofl+2)^0,w,c
   694  0018F0  1008               	iorwf	(??___xxtofl+3)^0,w,c
   695  0018F2  A4D8               	btfss	status,2,c
   696  0018F4  EF7E  F00C         	goto	u1441
   697  0018F8  EF80  F00C         	goto	u1440
   698  0018FC                     u1441:
   699  0018FC  EF5D  F00C         	goto	l1871
   700  001900                     u1440:
   701  001900  EF88  F00C         	goto	l1879
   702  001904                     l1877:
   703  001904  060A               	decf	___xxtofl@exp^0,f,c
   704  001906  90D8               	bcf	status,0,c
   705  001908  360B               	rlcf	___xxtofl@arg^0,f,c
   706  00190A  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
   707  00190C  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
   708  00190E  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
   709  001910                     l1879:
   710  001910  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
   711  001912  EF8D  F00C         	goto	u1451
   712  001916  EF8F  F00C         	goto	u1450
   713  00191A                     u1451:
   714  00191A  EF97  F00C         	goto	l773
   715  00191E                     u1450:
   716  00191E  0E02               	movlw	2
   717  001920  600A               	cpfslt	___xxtofl@exp^0,c
   718  001922  EF95  F00C         	goto	u1461
   719  001926  EF97  F00C         	goto	u1460
   720  00192A                     u1461:
   721  00192A  EF82  F00C         	goto	l1877
   722  00192E                     u1460:
   723  00192E                     l773:
   724  00192E  B00A               	btfsc	___xxtofl@exp^0,0,c
   725  001930  EF9C  F00C         	goto	u1471
   726  001934  EF9E  F00C         	goto	u1470
   727  001938                     u1471:
   728  001938  EF9F  F00C         	goto	l1885
   729  00193C                     u1470:
   730  00193C  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
   731  00193E                     l1885:
   732  00193E  90D8               	bcf	status,0,c
   733  001940  320A               	rrcf	___xxtofl@exp^0,f,c
   734  001942  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
   735  001946  6A06               	clrf	(??___xxtofl+1)^0,c
   736  001948  6A07               	clrf	(??___xxtofl+2)^0,c
   737  00194A  6A08               	clrf	(??___xxtofl+3)^0,c
   738  00194C  C005  F008         	movff	??___xxtofl,??___xxtofl+3
   739  001950  6A07               	clrf	(??___xxtofl+2)^0,c
   740  001952  6A06               	clrf	(??___xxtofl+1)^0,c
   741  001954  6A05               	clrf	??___xxtofl^0,c
   742  001956  5005               	movf	??___xxtofl^0,w,c
   743  001958  120B               	iorwf	___xxtofl@arg^0,f,c
   744  00195A  5006               	movf	(??___xxtofl+1)^0,w,c
   745  00195C  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
   746  00195E  5007               	movf	(??___xxtofl+2)^0,w,c
   747  001960  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
   748  001962  5008               	movf	(??___xxtofl+3)^0,w,c
   749  001964  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
   750  001966  5009               	movf	___xxtofl@sign^0,w,c
   751  001968  B4D8               	btfsc	status,2,c
   752  00196A  EFB9  F00C         	goto	u1481
   753  00196E  EFBB  F00C         	goto	u1480
   754  001972                     u1481:
   755  001972  EFC3  F00C         	goto	l1895
   756  001976                     u1480:
   757  001976  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
   758  001978  EFC2  F00C         	goto	u1490
   759  00197C  EFC0  F00C         	goto	u1491
   760  001980                     u1491:
   761  001980  EFC3  F00C         	goto	l1895
   762  001984                     u1490:
   763  001984  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
   764  001986                     l1895:
   765  001986  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
   766  00198A  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
   767  00198E  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
   768  001992  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
   769  001996                     l762:
   770  001996  0012               	return		;funcret
   771  001998                     __end_of___xxtofl:
   772                           	callstack 0
   773                           
   774 ;; *************** function ___fldiv *****************
   775 ;; Defined at:
   776 ;;		line 11 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/sprcdiv.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;  b               4   14[COMRAM] unsigned char 
   779 ;;  a               4   18[COMRAM] unsigned char 
   780 ;; Auto vars:     Size  Location     Type
   781 ;;  grs             4   33[COMRAM] unsigned long 
   782 ;;  rem             4   26[COMRAM] unsigned long 
   783 ;;  new_exp         2   31[COMRAM] short 
   784 ;;  aexp            1   38[COMRAM] unsigned char 
   785 ;;  bexp            1   37[COMRAM] unsigned char 
   786 ;;  sign            1   30[COMRAM] unsigned char 
   787 ;; Return value:  Size  Location     Type
   788 ;;                  4   14[COMRAM] unsigned char 
   789 ;; Registers used:
   790 ;;		wreg, status,2, status,0
   791 ;; Tracked objects:
   792 ;;		On entry : 0/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   796 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   797 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   798 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   799 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   800 ;;Total ram usage:       25 bytes
   801 ;; Hardware stack levels used:    1
   802 ;; This function calls:
   803 ;;		Nothing
   804 ;; This function is called by:
   805 ;;		_main
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809                           	psect	text2
   810  00144A                     __ptext2:
   811                           	callstack 0
   812  00144A                     ___fldiv:
   813                           	callstack 30
   814  00144A  5012               	movf	(___fldiv@b+3)^0,w,c
   815  00144C  0B80               	andlw	128
   816  00144E  6E1F               	movwf	___fldiv@sign^0,c
   817  001450  5012               	movf	(___fldiv@b+3)^0,w,c
   818  001452  2412               	addwf	(___fldiv@b+3)^0,w,c
   819  001454  6E26               	movwf	___fldiv@bexp^0,c
   820  001456  AE11               	btfss	(___fldiv@b+2)^0,7,c
   821  001458  EF30  F00A         	goto	u1171
   822  00145C  EF32  F00A         	goto	u1170
   823  001460                     u1171:
   824  001460  EF33  F00A         	goto	l1721
   825  001464                     u1170:
   826  001464  8026               	bsf	___fldiv@bexp^0,0,c
   827  001466                     l1721:
   828  001466  5026               	movf	___fldiv@bexp^0,w,c
   829  001468  B4D8               	btfsc	status,2,c
   830  00146A  EF39  F00A         	goto	u1181
   831  00146E  EF3B  F00A         	goto	u1180
   832  001472                     u1181:
   833  001472  EF50  F00A         	goto	l1731
   834  001476                     u1180:
   835  001476  2826               	incf	___fldiv@bexp^0,w,c
   836  001478  A4D8               	btfss	status,2,c
   837  00147A  EF41  F00A         	goto	u1191
   838  00147E  EF43  F00A         	goto	u1190
   839  001482                     u1191:
   840  001482  EF4B  F00A         	goto	l1727
   841  001486                     u1190:
   842  001486  0E00               	movlw	0
   843  001488  6E0F               	movwf	___fldiv@b^0,c
   844  00148A  0E00               	movlw	0
   845  00148C  6E10               	movwf	(___fldiv@b+1)^0,c
   846  00148E  0E00               	movlw	0
   847  001490  6E11               	movwf	(___fldiv@b+2)^0,c
   848  001492  0E00               	movlw	0
   849  001494  6E12               	movwf	(___fldiv@b+3)^0,c
   850  001496                     l1727:
   851  001496  8E11               	bsf	(___fldiv@b+2)^0,7,c
   852  001498  0E00               	movlw	0
   853  00149A  6E12               	movwf	(___fldiv@b+3)^0,c
   854  00149C  EF58  F00A         	goto	l1733
   855  0014A0                     l1731:
   856  0014A0  0E00               	movlw	0
   857  0014A2  6E0F               	movwf	___fldiv@b^0,c
   858  0014A4  0E00               	movlw	0
   859  0014A6  6E10               	movwf	(___fldiv@b+1)^0,c
   860  0014A8  0E00               	movlw	0
   861  0014AA  6E11               	movwf	(___fldiv@b+2)^0,c
   862  0014AC  0E00               	movlw	0
   863  0014AE  6E12               	movwf	(___fldiv@b+3)^0,c
   864  0014B0                     l1733:
   865  0014B0  5016               	movf	(___fldiv@a+3)^0,w,c
   866  0014B2  0B80               	andlw	128
   867  0014B4  1A1F               	xorwf	___fldiv@sign^0,f,c
   868  0014B6  5016               	movf	(___fldiv@a+3)^0,w,c
   869  0014B8  2416               	addwf	(___fldiv@a+3)^0,w,c
   870  0014BA  6E27               	movwf	___fldiv@aexp^0,c
   871  0014BC  AE15               	btfss	(___fldiv@a+2)^0,7,c
   872  0014BE  EF63  F00A         	goto	u1201
   873  0014C2  EF65  F00A         	goto	u1200
   874  0014C6                     u1201:
   875  0014C6  EF66  F00A         	goto	l1741
   876  0014CA                     u1200:
   877  0014CA  8027               	bsf	___fldiv@aexp^0,0,c
   878  0014CC                     l1741:
   879  0014CC  5027               	movf	___fldiv@aexp^0,w,c
   880  0014CE  B4D8               	btfsc	status,2,c
   881  0014D0  EF6C  F00A         	goto	u1211
   882  0014D4  EF6E  F00A         	goto	u1210
   883  0014D8                     u1211:
   884  0014D8  EF83  F00A         	goto	l1751
   885  0014DC                     u1210:
   886  0014DC  2827               	incf	___fldiv@aexp^0,w,c
   887  0014DE  A4D8               	btfss	status,2,c
   888  0014E0  EF74  F00A         	goto	u1221
   889  0014E4  EF76  F00A         	goto	u1220
   890  0014E8                     u1221:
   891  0014E8  EF7E  F00A         	goto	l1747
   892  0014EC                     u1220:
   893  0014EC  0E00               	movlw	0
   894  0014EE  6E13               	movwf	___fldiv@a^0,c
   895  0014F0  0E00               	movlw	0
   896  0014F2  6E14               	movwf	(___fldiv@a+1)^0,c
   897  0014F4  0E00               	movlw	0
   898  0014F6  6E15               	movwf	(___fldiv@a+2)^0,c
   899  0014F8  0E00               	movlw	0
   900  0014FA  6E16               	movwf	(___fldiv@a+3)^0,c
   901  0014FC                     l1747:
   902  0014FC  8E15               	bsf	(___fldiv@a+2)^0,7,c
   903  0014FE  0E00               	movlw	0
   904  001500  6E16               	movwf	(___fldiv@a+3)^0,c
   905  001502  EF8B  F00A         	goto	l1753
   906  001506                     l1751:
   907  001506  0E00               	movlw	0
   908  001508  6E13               	movwf	___fldiv@a^0,c
   909  00150A  0E00               	movlw	0
   910  00150C  6E14               	movwf	(___fldiv@a+1)^0,c
   911  00150E  0E00               	movlw	0
   912  001510  6E15               	movwf	(___fldiv@a+2)^0,c
   913  001512  0E00               	movlw	0
   914  001514  6E16               	movwf	(___fldiv@a+3)^0,c
   915  001516                     l1753:
   916  001516  5013               	movf	___fldiv@a^0,w,c
   917  001518  1014               	iorwf	(___fldiv@a+1)^0,w,c
   918  00151A  1015               	iorwf	(___fldiv@a+2)^0,w,c
   919  00151C  1016               	iorwf	(___fldiv@a+3)^0,w,c
   920  00151E  A4D8               	btfss	status,2,c
   921  001520  EF94  F00A         	goto	u1231
   922  001524  EF96  F00A         	goto	u1230
   923  001528                     u1231:
   924  001528  EFAE  F00A         	goto	l1765
   925  00152C                     u1230:
   926  00152C  0E00               	movlw	0
   927  00152E  6E0F               	movwf	___fldiv@b^0,c
   928  001530  0E00               	movlw	0
   929  001532  6E10               	movwf	(___fldiv@b+1)^0,c
   930  001534  0E00               	movlw	0
   931  001536  6E11               	movwf	(___fldiv@b+2)^0,c
   932  001538  0E00               	movlw	0
   933  00153A  6E12               	movwf	(___fldiv@b+3)^0,c
   934  00153C  0E80               	movlw	128
   935  00153E  1211               	iorwf	(___fldiv@b+2)^0,f,c
   936  001540  0E7F               	movlw	127
   937  001542  1212               	iorwf	(___fldiv@b+3)^0,f,c
   938  001544                     l1759:
   939  001544  501F               	movf	___fldiv@sign^0,w,c
   940  001546  1212               	iorwf	(___fldiv@b+3)^0,f,c
   941  001548  C00F  F00F         	movff	___fldiv@b,?___fldiv
   942  00154C  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
   943  001550  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
   944  001554  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
   945  001558  EFF1  F00B         	goto	l686
   946  00155C                     l1765:
   947  00155C  5026               	movf	___fldiv@bexp^0,w,c
   948  00155E  A4D8               	btfss	status,2,c
   949  001560  EFB4  F00A         	goto	u1241
   950  001564  EFB6  F00A         	goto	u1240
   951  001568                     u1241:
   952  001568  EFC0  F00A         	goto	l1773
   953  00156C                     u1240:
   954  00156C  0E00               	movlw	0
   955  00156E  6E0F               	movwf	?___fldiv^0,c
   956  001570  0E00               	movlw	0
   957  001572  6E10               	movwf	(?___fldiv+1)^0,c
   958  001574  0E00               	movlw	0
   959  001576  6E11               	movwf	(?___fldiv+2)^0,c
   960  001578  0E00               	movlw	0
   961  00157A  6E12               	movwf	(?___fldiv+3)^0,c
   962  00157C  EFF1  F00B         	goto	l686
   963  001580                     l1773:
   964  001580  5027               	movf	___fldiv@aexp^0,w,c
   965  001582  C026  F017         	movff	___fldiv@bexp,??___fldiv
   966  001586  6A18               	clrf	(??___fldiv+1)^0,c
   967  001588  5E17               	subwf	??___fldiv^0,f,c
   968  00158A  0E00               	movlw	0
   969  00158C  5A18               	subwfb	(??___fldiv+1)^0,f,c
   970  00158E  0E7F               	movlw	127
   971  001590  2417               	addwf	??___fldiv^0,w,c
   972  001592  6E20               	movwf	___fldiv@new_exp^0,c
   973  001594  0E00               	movlw	0
   974  001596  2018               	addwfc	(??___fldiv+1)^0,w,c
   975  001598  6E21               	movwf	(___fldiv@new_exp+1)^0,c
   976  00159A  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
   977  00159E  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
   978  0015A2  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
   979  0015A6  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
   980  0015AA  0E00               	movlw	0
   981  0015AC  6E0F               	movwf	___fldiv@b^0,c
   982  0015AE  0E00               	movlw	0
   983  0015B0  6E10               	movwf	(___fldiv@b+1)^0,c
   984  0015B2  0E00               	movlw	0
   985  0015B4  6E11               	movwf	(___fldiv@b+2)^0,c
   986  0015B6  0E00               	movlw	0
   987  0015B8  6E12               	movwf	(___fldiv@b+3)^0,c
   988  0015BA  0E00               	movlw	0
   989  0015BC  6E22               	movwf	___fldiv@grs^0,c
   990  0015BE  0E00               	movlw	0
   991  0015C0  6E23               	movwf	(___fldiv@grs+1)^0,c
   992  0015C2  0E00               	movlw	0
   993  0015C4  6E24               	movwf	(___fldiv@grs+2)^0,c
   994  0015C6  0E00               	movlw	0
   995  0015C8  6E25               	movwf	(___fldiv@grs+3)^0,c
   996  0015CA  0E00               	movlw	0
   997  0015CC  6E27               	movwf	___fldiv@aexp^0,c
   998  0015CE  EF21  F00B         	goto	l688
   999  0015D2                     l1783:
  1000  0015D2  5027               	movf	___fldiv@aexp^0,w,c
  1001  0015D4  B4D8               	btfsc	status,2,c
  1002  0015D6  EFEF  F00A         	goto	u1251
  1003  0015DA  EFF1  F00A         	goto	u1250
  1004  0015DE                     u1251:
  1005  0015DE  EF08  F00B         	goto	l1791
  1006  0015E2                     u1250:
  1007  0015E2  90D8               	bcf	status,0,c
  1008  0015E4  361B               	rlcf	___fldiv@rem^0,f,c
  1009  0015E6  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  1010  0015E8  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  1011  0015EA  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  1012  0015EC  90D8               	bcf	status,0,c
  1013  0015EE  360F               	rlcf	___fldiv@b^0,f,c
  1014  0015F0  3610               	rlcf	(___fldiv@b+1)^0,f,c
  1015  0015F2  3611               	rlcf	(___fldiv@b+2)^0,f,c
  1016  0015F4  3612               	rlcf	(___fldiv@b+3)^0,f,c
  1017  0015F6  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  1018  0015F8  EF00  F00B         	goto	u1261
  1019  0015FC  EF02  F00B         	goto	u1260
  1020  001600                     u1261:
  1021  001600  EF03  F00B         	goto	l691
  1022  001604                     u1260:
  1023  001604  800F               	bsf	___fldiv@b^0,0,c
  1024  001606                     l691:
  1025  001606  90D8               	bcf	status,0,c
  1026  001608  3622               	rlcf	___fldiv@grs^0,f,c
  1027  00160A  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  1028  00160C  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  1029  00160E  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  1030  001610                     l1791:
  1031  001610  5013               	movf	___fldiv@a^0,w,c
  1032  001612  5C1B               	subwf	___fldiv@rem^0,w,c
  1033  001614  5014               	movf	(___fldiv@a+1)^0,w,c
  1034  001616  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  1035  001618  5015               	movf	(___fldiv@a+2)^0,w,c
  1036  00161A  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  1037  00161C  5016               	movf	(___fldiv@a+3)^0,w,c
  1038  00161E  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  1039  001620  A0D8               	btfss	status,0,c
  1040  001622  EF15  F00B         	goto	u1271
  1041  001626  EF17  F00B         	goto	u1270
  1042  00162A                     u1271:
  1043  00162A  EF20  F00B         	goto	l1797
  1044  00162E                     u1270:
  1045  00162E  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  1046  001630  5013               	movf	___fldiv@a^0,w,c
  1047  001632  5E1B               	subwf	___fldiv@rem^0,f,c
  1048  001634  5014               	movf	(___fldiv@a+1)^0,w,c
  1049  001636  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  1050  001638  5015               	movf	(___fldiv@a+2)^0,w,c
  1051  00163A  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  1052  00163C  5016               	movf	(___fldiv@a+3)^0,w,c
  1053  00163E  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  1054  001640                     l1797:
  1055  001640  2A27               	incf	___fldiv@aexp^0,f,c
  1056  001642                     l688:
  1057  001642  0E19               	movlw	25
  1058  001644  6427               	cpfsgt	___fldiv@aexp^0,c
  1059  001646  EF27  F00B         	goto	u1281
  1060  00164A  EF29  F00B         	goto	u1280
  1061  00164E                     u1281:
  1062  00164E  EFE9  F00A         	goto	l1783
  1063  001652                     u1280:
  1064  001652  501B               	movf	___fldiv@rem^0,w,c
  1065  001654  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  1066  001656  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  1067  001658  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  1068  00165A  B4D8               	btfsc	status,2,c
  1069  00165C  EF32  F00B         	goto	u1291
  1070  001660  EF34  F00B         	goto	u1290
  1071  001664                     u1291:
  1072  001664  EF4C  F00B         	goto	l1809
  1073  001668                     u1290:
  1074  001668  8022               	bsf	___fldiv@grs^0,0,c
  1075  00166A  EF4C  F00B         	goto	l1809
  1076  00166E                     l1803:
  1077  00166E  90D8               	bcf	status,0,c
  1078  001670  360F               	rlcf	___fldiv@b^0,f,c
  1079  001672  3610               	rlcf	(___fldiv@b+1)^0,f,c
  1080  001674  3611               	rlcf	(___fldiv@b+2)^0,f,c
  1081  001676  3612               	rlcf	(___fldiv@b+3)^0,f,c
  1082  001678  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  1083  00167A  EF41  F00B         	goto	u1301
  1084  00167E  EF43  F00B         	goto	u1300
  1085  001682                     u1301:
  1086  001682  EF44  F00B         	goto	l697
  1087  001686                     u1300:
  1088  001686  800F               	bsf	___fldiv@b^0,0,c
  1089  001688                     l697:
  1090  001688  90D8               	bcf	status,0,c
  1091  00168A  3622               	rlcf	___fldiv@grs^0,f,c
  1092  00168C  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  1093  00168E  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  1094  001690  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  1095  001692  0620               	decf	___fldiv@new_exp^0,f,c
  1096  001694  A0D8               	btfss	status,0,c
  1097  001696  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  1098  001698                     l1809:
  1099  001698  AE11               	btfss	(___fldiv@b+2)^0,7,c
  1100  00169A  EF51  F00B         	goto	u1311
  1101  00169E  EF53  F00B         	goto	u1310
  1102  0016A2                     u1311:
  1103  0016A2  EF37  F00B         	goto	l1803
  1104  0016A6                     u1310:
  1105  0016A6  0E00               	movlw	0
  1106  0016A8  6E27               	movwf	___fldiv@aexp^0,c
  1107  0016AA  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  1108  0016AC  EF5A  F00B         	goto	u1321
  1109  0016B0  EF5C  F00B         	goto	u1320
  1110  0016B4                     u1321:
  1111  0016B4  EF80  F00B         	goto	l699
  1112  0016B8                     u1320:
  1113  0016B8  0EFF               	movlw	255
  1114  0016BA  1422               	andwf	___fldiv@grs^0,w,c
  1115  0016BC  6E17               	movwf	??___fldiv^0,c
  1116  0016BE  0EFF               	movlw	255
  1117  0016C0  1423               	andwf	(___fldiv@grs+1)^0,w,c
  1118  0016C2  6E18               	movwf	(??___fldiv+1)^0,c
  1119  0016C4  0EFF               	movlw	255
  1120  0016C6  1424               	andwf	(___fldiv@grs+2)^0,w,c
  1121  0016C8  6E19               	movwf	(??___fldiv+2)^0,c
  1122  0016CA  0E7F               	movlw	127
  1123  0016CC  1425               	andwf	(___fldiv@grs+3)^0,w,c
  1124  0016CE  6E1A               	movwf	(??___fldiv+3)^0,c
  1125  0016D0  5017               	movf	??___fldiv^0,w,c
  1126  0016D2  1018               	iorwf	(??___fldiv+1)^0,w,c
  1127  0016D4  1019               	iorwf	(??___fldiv+2)^0,w,c
  1128  0016D6  101A               	iorwf	(??___fldiv+3)^0,w,c
  1129  0016D8  B4D8               	btfsc	status,2,c
  1130  0016DA  EF71  F00B         	goto	u1331
  1131  0016DE  EF73  F00B         	goto	u1330
  1132  0016E2                     u1331:
  1133  0016E2  EF77  F00B         	goto	l700
  1134  0016E6                     u1330:
  1135  0016E6                     l1817:
  1136  0016E6  0E01               	movlw	1
  1137  0016E8  6E27               	movwf	___fldiv@aexp^0,c
  1138  0016EA  EF80  F00B         	goto	l699
  1139  0016EE                     l700:
  1140  0016EE  A00F               	btfss	___fldiv@b^0,0,c
  1141  0016F0  EF7C  F00B         	goto	u1341
  1142  0016F4  EF7E  F00B         	goto	u1340
  1143  0016F8                     u1341:
  1144  0016F8  EF80  F00B         	goto	l699
  1145  0016FC                     u1340:
  1146  0016FC  EF73  F00B         	goto	l1817
  1147  001700                     l699:
  1148  001700  5027               	movf	___fldiv@aexp^0,w,c
  1149  001702  B4D8               	btfsc	status,2,c
  1150  001704  EF86  F00B         	goto	u1351
  1151  001708  EF88  F00B         	goto	u1350
  1152  00170C                     u1351:
  1153  00170C  EFAC  F00B         	goto	l1829
  1154  001710                     u1350:
  1155  001710  0E01               	movlw	1
  1156  001712  260F               	addwf	___fldiv@b^0,f,c
  1157  001714  0E00               	movlw	0
  1158  001716  2210               	addwfc	(___fldiv@b+1)^0,f,c
  1159  001718  2211               	addwfc	(___fldiv@b+2)^0,f,c
  1160  00171A  2212               	addwfc	(___fldiv@b+3)^0,f,c
  1161  00171C  A012               	btfss	(___fldiv@b+3)^0,0,c
  1162  00171E  EF93  F00B         	goto	u1361
  1163  001722  EF95  F00B         	goto	u1360
  1164  001726                     u1361:
  1165  001726  EFAC  F00B         	goto	l1829
  1166  00172A                     u1360:
  1167  00172A  C00F  F017         	movff	___fldiv@b,??___fldiv
  1168  00172E  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  1169  001732  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  1170  001736  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  1171  00173A  341A               	rlcf	(??___fldiv+3)^0,w,c
  1172  00173C  321A               	rrcf	(??___fldiv+3)^0,f,c
  1173  00173E  3219               	rrcf	(??___fldiv+2)^0,f,c
  1174  001740  3218               	rrcf	(??___fldiv+1)^0,f,c
  1175  001742  3217               	rrcf	??___fldiv^0,f,c
  1176  001744  C017  F00F         	movff	??___fldiv,___fldiv@b
  1177  001748  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  1178  00174C  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  1179  001750  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  1180  001754  4A20               	infsnz	___fldiv@new_exp^0,f,c
  1181  001756  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  1182  001758                     l1829:
  1183  001758  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  1184  00175A  EFB7  F00B         	goto	u1371
  1185  00175E  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  1186  001760  E108               	bnz	u1370
  1187  001762  2820               	incf	___fldiv@new_exp^0,w,c
  1188  001764  A0D8               	btfss	status,0,c
  1189  001766  EFB7  F00B         	goto	u1371
  1190  00176A  EFB9  F00B         	goto	u1370
  1191  00176E                     u1371:
  1192  00176E  EFC4  F00B         	goto	l1833
  1193  001772                     u1370:
  1194  001772  0E00               	movlw	0
  1195  001774  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  1196  001776  6820               	setf	___fldiv@new_exp^0,c
  1197  001778  0E00               	movlw	0
  1198  00177A  6E0F               	movwf	___fldiv@b^0,c
  1199  00177C  0E00               	movlw	0
  1200  00177E  6E10               	movwf	(___fldiv@b+1)^0,c
  1201  001780  0E00               	movlw	0
  1202  001782  6E11               	movwf	(___fldiv@b+2)^0,c
  1203  001784  0E00               	movlw	0
  1204  001786  6E12               	movwf	(___fldiv@b+3)^0,c
  1205  001788                     l1833:
  1206  001788  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  1207  00178A  EFD1  F00B         	goto	u1380
  1208  00178E  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  1209  001790  E106               	bnz	u1381
  1210  001792  0420               	decf	___fldiv@new_exp^0,w,c
  1211  001794  B0D8               	btfsc	status,0,c
  1212  001796  EFCF  F00B         	goto	u1381
  1213  00179A  EFD1  F00B         	goto	u1380
  1214  00179E                     u1381:
  1215  00179E  EFDF  F00B         	goto	l1837
  1216  0017A2                     u1380:
  1217  0017A2  0E00               	movlw	0
  1218  0017A4  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  1219  0017A6  0E00               	movlw	0
  1220  0017A8  6E20               	movwf	___fldiv@new_exp^0,c
  1221  0017AA  0E00               	movlw	0
  1222  0017AC  6E0F               	movwf	___fldiv@b^0,c
  1223  0017AE  0E00               	movlw	0
  1224  0017B0  6E10               	movwf	(___fldiv@b+1)^0,c
  1225  0017B2  0E00               	movlw	0
  1226  0017B4  6E11               	movwf	(___fldiv@b+2)^0,c
  1227  0017B6  0E00               	movlw	0
  1228  0017B8  6E12               	movwf	(___fldiv@b+3)^0,c
  1229  0017BA  0E00               	movlw	0
  1230  0017BC  6E1F               	movwf	___fldiv@sign^0,c
  1231  0017BE                     l1837:
  1232  0017BE  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  1233  0017C2  A026               	btfss	___fldiv@bexp^0,0,c
  1234  0017C4  EFE6  F00B         	goto	u1391
  1235  0017C8  EFE8  F00B         	goto	u1390
  1236  0017CC                     u1391:
  1237  0017CC  EFEB  F00B         	goto	l1843
  1238  0017D0                     u1390:
  1239  0017D0  8E11               	bsf	(___fldiv@b+2)^0,7,c
  1240  0017D2  EFEC  F00B         	goto	l1845
  1241  0017D6                     l1843:
  1242  0017D6  9E11               	bcf	(___fldiv@b+2)^0,7,c
  1243  0017D8                     l1845:
  1244  0017D8  90D8               	bcf	status,0,c
  1245  0017DA  3026               	rrcf	___fldiv@bexp^0,w,c
  1246  0017DC  6E12               	movwf	(___fldiv@b+3)^0,c
  1247  0017DE  EFA2  F00A         	goto	l1759
  1248  0017E2                     l686:
  1249  0017E2  0012               	return		;funcret
  1250  0017E4                     __end_of___fldiv:
  1251                           	callstack 0
  1252                           
  1253 ;; *************** function _LCDWriteFloat *****************
  1254 ;; Defined at:
  1255 ;;		line 183 in file "lcd.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;  column          1    wreg     unsigned char 
  1258 ;;  row             1   79[COMRAM] unsigned char 
  1259 ;;  value           4   80[COMRAM] float 
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;  column          1   84[COMRAM] unsigned char 
  1262 ;;  string          5   85[COMRAM] unsigned char [5]
  1263 ;;  integer         2   90[COMRAM] unsigned int 
  1264 ;; Return value:  Size  Location     Type
  1265 ;;                  1    wreg      void 
  1266 ;; Registers used:
  1267 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1273 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1274 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1276 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1277 ;;Total ram usage:       13 bytes
  1278 ;; Hardware stack levels used:    1
  1279 ;; Hardware stack levels required when called:    4
  1280 ;; This function calls:
  1281 ;;		_LCDGoto
  1282 ;;		_LCDWriteStr
  1283 ;;		___flmul
  1284 ;;		___fltol
  1285 ;;		___lwdiv
  1286 ;;		___lwmod
  1287 ;; This function is called by:
  1288 ;;		_main
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           	psect	text3
  1293  001B86                     __ptext3:
  1294                           	callstack 0
  1295  001B86                     _LCDWriteFloat:
  1296                           	callstack 26
  1297                           
  1298                           ;incstack = 0
  1299                           ;LCDWriteFloat@column stored from wreg
  1300  001B86  6E55               	movwf	LCDWriteFloat@column^0,c
  1301  001B88                     
  1302                           ;lcd.c: 184:     UINT16_T integer;;lcd.c: 185:     char string[5];;lcd.c: 187:     integ
      +                          er = (UINT16_T)(value * 100) % 1000;
  1303  001B88  0E00               	movlw	0
  1304  001B8A  6E2C               	movwf	___flmul@a^0,c
  1305  001B8C  0E00               	movlw	0
  1306  001B8E  6E2D               	movwf	(___flmul@a+1)^0,c
  1307  001B90  0EC8               	movlw	200
  1308  001B92  6E2E               	movwf	(___flmul@a+2)^0,c
  1309  001B94  0E42               	movlw	66
  1310  001B96  6E2F               	movwf	(___flmul@a+3)^0,c
  1311  001B98  C051  F028         	movff	LCDWriteFloat@value,___flmul@b
  1312  001B9C  C052  F029         	movff	LCDWriteFloat@value+1,___flmul@b+1
  1313  001BA0  C053  F02A         	movff	LCDWriteFloat@value+2,___flmul@b+2
  1314  001BA4  C054  F02B         	movff	LCDWriteFloat@value+3,___flmul@b+3
  1315  001BA8  EC10  F008         	call	___flmul	;wreg free
  1316  001BAC  C028  F041         	movff	?___flmul,___fltol@f1
  1317  001BB0  C029  F042         	movff	?___flmul+1,___fltol@f1+1
  1318  001BB4  C02A  F043         	movff	?___flmul+2,___fltol@f1+2
  1319  001BB8  C02B  F044         	movff	?___flmul+3,___fltol@f1+3
  1320  001BBC  ECCC  F00C         	call	___fltol	;wreg free
  1321  001BC0  C041  F04B         	movff	?___fltol,___lwmod@dividend
  1322  001BC4  C042  F04C         	movff	?___fltol+1,___lwmod@dividend+1
  1323  001BC8  0E03               	movlw	3
  1324  001BCA  6E4E               	movwf	(___lwmod@divisor+1)^0,c
  1325  001BCC  0EE8               	movlw	232
  1326  001BCE  6E4D               	movwf	___lwmod@divisor^0,c
  1327  001BD0  EC40  F00F         	call	___lwmod	;wreg free
  1328  001BD4  C04B  F05B         	movff	?___lwmod,LCDWriteFloat@integer
  1329  001BD8  C04C  F05C         	movff	?___lwmod+1,LCDWriteFloat@integer+1
  1330  001BDC                     
  1331                           ;lcd.c: 188:     string[0] = integer / 100 + '0';
  1332  001BDC  C05B  F001         	movff	LCDWriteFloat@integer,___lwdiv@dividend
  1333  001BE0  C05C  F002         	movff	LCDWriteFloat@integer+1,___lwdiv@dividend+1
  1334  001BE4  0E00               	movlw	0
  1335  001BE6  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  1336  001BE8  0E64               	movlw	100
  1337  001BEA  6E03               	movwf	___lwdiv@divisor^0,c
  1338  001BEC  ECD1  F00E         	call	___lwdiv	;wreg free
  1339  001BF0  5001               	movf	?___lwdiv^0,w,c
  1340  001BF2  0F30               	addlw	48
  1341  001BF4  6E56               	movwf	LCDWriteFloat@string^0,c
  1342  001BF6                     
  1343                           ;lcd.c: 189:     string[1] = '.';
  1344  001BF6  0E2E               	movlw	46
  1345  001BF8  6E57               	movwf	(LCDWriteFloat@string+1)^0,c
  1346  001BFA                     
  1347                           ;lcd.c: 190:     string[2] = (integer / 10) % 10 + '0';
  1348  001BFA  0E00               	movlw	0
  1349  001BFC  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  1350  001BFE  0E0A               	movlw	10
  1351  001C00  6E03               	movwf	___lwdiv@divisor^0,c
  1352  001C02  C05B  F001         	movff	LCDWriteFloat@integer,___lwdiv@dividend
  1353  001C06  C05C  F002         	movff	LCDWriteFloat@integer+1,___lwdiv@dividend+1
  1354  001C0A  ECD1  F00E         	call	___lwdiv	;wreg free
  1355  001C0E  C001  F04B         	movff	?___lwdiv,___lwmod@dividend
  1356  001C12  C002  F04C         	movff	?___lwdiv+1,___lwmod@dividend+1
  1357  001C16  0E00               	movlw	0
  1358  001C18  6E4E               	movwf	(___lwmod@divisor+1)^0,c
  1359  001C1A  0E0A               	movlw	10
  1360  001C1C  6E4D               	movwf	___lwmod@divisor^0,c
  1361  001C1E  EC40  F00F         	call	___lwmod	;wreg free
  1362  001C22  504B               	movf	?___lwmod^0,w,c
  1363  001C24  0F30               	addlw	48
  1364  001C26  6E58               	movwf	(LCDWriteFloat@string+2)^0,c
  1365  001C28                     
  1366                           ;lcd.c: 191:     string[3] = integer % 10 + '0';
  1367  001C28  C05B  F04B         	movff	LCDWriteFloat@integer,___lwmod@dividend
  1368  001C2C  C05C  F04C         	movff	LCDWriteFloat@integer+1,___lwmod@dividend+1
  1369  001C30  0E00               	movlw	0
  1370  001C32  6E4E               	movwf	(___lwmod@divisor+1)^0,c
  1371  001C34  0E0A               	movlw	10
  1372  001C36  6E4D               	movwf	___lwmod@divisor^0,c
  1373  001C38  EC40  F00F         	call	___lwmod	;wreg free
  1374  001C3C  504B               	movf	?___lwmod^0,w,c
  1375  001C3E  0F30               	addlw	48
  1376  001C40  6E59               	movwf	(LCDWriteFloat@string+3)^0,c
  1377  001C42                     
  1378                           ;lcd.c: 192:     string[4] = '\0';
  1379  001C42  0E00               	movlw	0
  1380  001C44  6E5A               	movwf	(LCDWriteFloat@string+4)^0,c
  1381  001C46                     
  1382                           ;lcd.c: 194:     LCDGoto(column, row);
  1383  001C46  C050  F006         	movff	LCDWriteFloat@row,LCDGoto@row
  1384  001C4A  5055               	movf	LCDWriteFloat@column^0,w,c
  1385  001C4C  EC0B  F00F         	call	_LCDGoto
  1386  001C50                     
  1387                           ;lcd.c: 195:     LCDWriteStr(string);
  1388  001C50  0E56               	movlw	low LCDWriteFloat@string
  1389  001C52  6E07               	movwf	LCDWriteStr@string^0,c
  1390  001C54  0E00               	movlw	high LCDWriteFloat@string
  1391  001C56  6E08               	movwf	(LCDWriteStr@string+1)^0,c
  1392  001C58  EC93  F00E         	call	_LCDWriteStr	;wreg free
  1393  001C5C  0012               	return		;funcret
  1394  001C5E                     __end_of_LCDWriteFloat:
  1395                           	callstack 0
  1396                           
  1397 ;; *************** function ___lwmod *****************
  1398 ;; Defined at:
  1399 ;;		line 7 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/lwmod.c"
  1400 ;; Parameters:    Size  Location     Type
  1401 ;;  dividend        2   74[COMRAM] unsigned int 
  1402 ;;  divisor         2   76[COMRAM] unsigned int 
  1403 ;; Auto vars:     Size  Location     Type
  1404 ;;  counter         1   78[COMRAM] unsigned char 
  1405 ;; Return value:  Size  Location     Type
  1406 ;;                  2   74[COMRAM] unsigned int 
  1407 ;; Registers used:
  1408 ;;		wreg, status,2, status,0
  1409 ;; Tracked objects:
  1410 ;;		On entry : 0/0
  1411 ;;		On exit  : 0/0
  1412 ;;		Unchanged: 0/0
  1413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1414 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1415 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1417 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1418 ;;Total ram usage:        5 bytes
  1419 ;; Hardware stack levels used:    1
  1420 ;; This function calls:
  1421 ;;		Nothing
  1422 ;; This function is called by:
  1423 ;;		_LCDWriteFloat
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427                           	psect	text4
  1428  001E80                     __ptext4:
  1429                           	callstack 0
  1430  001E80                     ___lwmod:
  1431                           	callstack 29
  1432  001E80  504D               	movf	___lwmod@divisor^0,w,c
  1433  001E82  104E               	iorwf	(___lwmod@divisor+1)^0,w,c
  1434  001E84  B4D8               	btfsc	status,2,c
  1435  001E86  EF47  F00F         	goto	u1141
  1436  001E8A  EF49  F00F         	goto	u1140
  1437  001E8E                     u1141:
  1438  001E8E  EF6D  F00F         	goto	l605
  1439  001E92                     u1140:
  1440  001E92  0E01               	movlw	1
  1441  001E94  6E4F               	movwf	___lwmod@counter^0,c
  1442  001E96  EF51  F00F         	goto	l1643
  1443  001E9A                     l1641:
  1444  001E9A  90D8               	bcf	status,0,c
  1445  001E9C  364D               	rlcf	___lwmod@divisor^0,f,c
  1446  001E9E  364E               	rlcf	(___lwmod@divisor+1)^0,f,c
  1447  001EA0  2A4F               	incf	___lwmod@counter^0,f,c
  1448  001EA2                     l1643:
  1449  001EA2  AE4E               	btfss	(___lwmod@divisor+1)^0,7,c
  1450  001EA4  EF56  F00F         	goto	u1151
  1451  001EA8  EF58  F00F         	goto	u1150
  1452  001EAC                     u1151:
  1453  001EAC  EF4D  F00F         	goto	l1641
  1454  001EB0                     u1150:
  1455  001EB0                     l1645:
  1456  001EB0  504D               	movf	___lwmod@divisor^0,w,c
  1457  001EB2  5C4B               	subwf	___lwmod@dividend^0,w,c
  1458  001EB4  504E               	movf	(___lwmod@divisor+1)^0,w,c
  1459  001EB6  584C               	subwfb	(___lwmod@dividend+1)^0,w,c
  1460  001EB8  A0D8               	btfss	status,0,c
  1461  001EBA  EF61  F00F         	goto	u1161
  1462  001EBE  EF63  F00F         	goto	u1160
  1463  001EC2                     u1161:
  1464  001EC2  EF67  F00F         	goto	l1649
  1465  001EC6                     u1160:
  1466  001EC6  504D               	movf	___lwmod@divisor^0,w,c
  1467  001EC8  5E4B               	subwf	___lwmod@dividend^0,f,c
  1468  001ECA  504E               	movf	(___lwmod@divisor+1)^0,w,c
  1469  001ECC  5A4C               	subwfb	(___lwmod@dividend+1)^0,f,c
  1470  001ECE                     l1649:
  1471  001ECE  90D8               	bcf	status,0,c
  1472  001ED0  324E               	rrcf	(___lwmod@divisor+1)^0,f,c
  1473  001ED2  324D               	rrcf	___lwmod@divisor^0,f,c
  1474  001ED4  2E4F               	decfsz	___lwmod@counter^0,f,c
  1475  001ED6  EF58  F00F         	goto	l1645
  1476  001EDA                     l605:
  1477  001EDA  C04B  F04B         	movff	___lwmod@dividend,?___lwmod
  1478  001EDE  C04C  F04C         	movff	___lwmod@dividend+1,?___lwmod+1
  1479  001EE2  0012               	return		;funcret
  1480  001EE4                     __end_of___lwmod:
  1481                           	callstack 0
  1482                           
  1483 ;; *************** function ___lwdiv *****************
  1484 ;; Defined at:
  1485 ;;		line 7 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/lwdiv.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;  dividend        2    0[COMRAM] unsigned int 
  1488 ;;  divisor         2    2[COMRAM] unsigned int 
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;  quotient        2    4[COMRAM] unsigned int 
  1491 ;;  counter         1    6[COMRAM] unsigned char 
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  2    0[COMRAM] unsigned int 
  1494 ;; Registers used:
  1495 ;;		wreg, status,2, status,0
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1501 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1502 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1504 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1505 ;;Total ram usage:        7 bytes
  1506 ;; Hardware stack levels used:    1
  1507 ;; This function calls:
  1508 ;;		Nothing
  1509 ;; This function is called by:
  1510 ;;		_LCDWriteFloat
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           	psect	text5
  1515  001DA2                     __ptext5:
  1516                           	callstack 0
  1517  001DA2                     ___lwdiv:
  1518                           	callstack 29
  1519  001DA2  0E00               	movlw	0
  1520  001DA4  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  1521  001DA6  0E00               	movlw	0
  1522  001DA8  6E05               	movwf	___lwdiv@quotient^0,c
  1523  001DAA  5003               	movf	___lwdiv@divisor^0,w,c
  1524  001DAC  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1525  001DAE  B4D8               	btfsc	status,2,c
  1526  001DB0  EFDC  F00E         	goto	u1111
  1527  001DB4  EFDE  F00E         	goto	u1110
  1528  001DB8                     u1111:
  1529  001DB8  EF06  F00F         	goto	l595
  1530  001DBC                     u1110:
  1531  001DBC  0E01               	movlw	1
  1532  001DBE  6E07               	movwf	___lwdiv@counter^0,c
  1533  001DC0  EFE6  F00E         	goto	l1623
  1534  001DC4                     l1621:
  1535  001DC4  90D8               	bcf	status,0,c
  1536  001DC6  3603               	rlcf	___lwdiv@divisor^0,f,c
  1537  001DC8  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1538  001DCA  2A07               	incf	___lwdiv@counter^0,f,c
  1539  001DCC                     l1623:
  1540  001DCC  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  1541  001DCE  EFEB  F00E         	goto	u1121
  1542  001DD2  EFED  F00E         	goto	u1120
  1543  001DD6                     u1121:
  1544  001DD6  EFE2  F00E         	goto	l1621
  1545  001DDA                     u1120:
  1546  001DDA                     l1625:
  1547  001DDA  90D8               	bcf	status,0,c
  1548  001DDC  3605               	rlcf	___lwdiv@quotient^0,f,c
  1549  001DDE  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1550  001DE0  5003               	movf	___lwdiv@divisor^0,w,c
  1551  001DE2  5C01               	subwf	___lwdiv@dividend^0,w,c
  1552  001DE4  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1553  001DE6  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1554  001DE8  A0D8               	btfss	status,0,c
  1555  001DEA  EFF9  F00E         	goto	u1131
  1556  001DEE  EFFB  F00E         	goto	u1130
  1557  001DF2                     u1131:
  1558  001DF2  EF00  F00F         	goto	l1633
  1559  001DF6                     u1130:
  1560  001DF6  5003               	movf	___lwdiv@divisor^0,w,c
  1561  001DF8  5E01               	subwf	___lwdiv@dividend^0,f,c
  1562  001DFA  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1563  001DFC  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1564  001DFE  8005               	bsf	___lwdiv@quotient^0,0,c
  1565  001E00                     l1633:
  1566  001E00  90D8               	bcf	status,0,c
  1567  001E02  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1568  001E04  3203               	rrcf	___lwdiv@divisor^0,f,c
  1569  001E06  2E07               	decfsz	___lwdiv@counter^0,f,c
  1570  001E08  EFED  F00E         	goto	l1625
  1571  001E0C                     l595:
  1572  001E0C  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1573  001E10  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1574  001E14  0012               	return		;funcret
  1575  001E16                     __end_of___lwdiv:
  1576                           	callstack 0
  1577                           
  1578 ;; *************** function ___fltol *****************
  1579 ;; Defined at:
  1580 ;;		line 43 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/fltol.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;  f1              4   64[COMRAM] unsigned int 
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;  exp1            1   73[COMRAM] unsigned char 
  1585 ;;  sign1           1   72[COMRAM] unsigned char 
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  4   64[COMRAM] long 
  1588 ;; Registers used:
  1589 ;;		wreg, status,2, status,0
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1595 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1596 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1597 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1598 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1599 ;;Total ram usage:       10 bytes
  1600 ;; Hardware stack levels used:    1
  1601 ;; This function calls:
  1602 ;;		Nothing
  1603 ;; This function is called by:
  1604 ;;		_LCDWriteFloat
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           	psect	text6
  1609  001998                     __ptext6:
  1610                           	callstack 0
  1611  001998                     ___fltol:
  1612                           	callstack 29
  1613  001998  3443               	rlcf	(___fltol@f1+2)^0,w,c
  1614  00199A  3444               	rlcf	(___fltol@f1+3)^0,w,c
  1615  00199C  6E4A               	movwf	___fltol@exp1^0,c
  1616  00199E  504A               	movf	___fltol@exp1^0,w,c
  1617  0019A0  A4D8               	btfss	status,2,c
  1618  0019A2  EFD5  F00C         	goto	u1041
  1619  0019A6  EFD7  F00C         	goto	u1040
  1620  0019AA                     u1041:
  1621  0019AA  EFE1  F00C         	goto	l1577
  1622  0019AE                     u1040:
  1623  0019AE                     l1573:
  1624  0019AE  0E00               	movlw	0
  1625  0019B0  6E41               	movwf	?___fltol^0,c
  1626  0019B2  0E00               	movlw	0
  1627  0019B4  6E42               	movwf	(?___fltol+1)^0,c
  1628  0019B6  0E00               	movlw	0
  1629  0019B8  6E43               	movwf	(?___fltol+2)^0,c
  1630  0019BA  0E00               	movlw	0
  1631  0019BC  6E44               	movwf	(?___fltol+3)^0,c
  1632  0019BE  EF4E  F00D         	goto	l401
  1633  0019C2                     l1577:
  1634  0019C2  C041  F045         	movff	___fltol@f1,??___fltol
  1635  0019C6  C042  F046         	movff	___fltol@f1+1,??___fltol+1
  1636  0019CA  C043  F047         	movff	___fltol@f1+2,??___fltol+2
  1637  0019CE  C044  F048         	movff	___fltol@f1+3,??___fltol+3
  1638  0019D2  0E20               	movlw	32
  1639  0019D4  EFF1  F00C         	goto	u1050
  1640  0019D8                     u1055:
  1641  0019D8  90D8               	bcf	status,0,c
  1642  0019DA  3248               	rrcf	(??___fltol+3)^0,f,c
  1643  0019DC  3247               	rrcf	(??___fltol+2)^0,f,c
  1644  0019DE  3246               	rrcf	(??___fltol+1)^0,f,c
  1645  0019E0  3245               	rrcf	??___fltol^0,f,c
  1646  0019E2                     u1050:
  1647  0019E2  2EE8               	decfsz	wreg,f,c
  1648  0019E4  EFEC  F00C         	goto	u1055
  1649  0019E8  5045               	movf	??___fltol^0,w,c
  1650  0019EA  6E49               	movwf	___fltol@sign1^0,c
  1651  0019EC  8E43               	bsf	(___fltol@f1+2)^0,7,c
  1652  0019EE  0EFF               	movlw	255
  1653  0019F0  1641               	andwf	___fltol@f1^0,f,c
  1654  0019F2  0EFF               	movlw	255
  1655  0019F4  1642               	andwf	(___fltol@f1+1)^0,f,c
  1656  0019F6  0EFF               	movlw	255
  1657  0019F8  1643               	andwf	(___fltol@f1+2)^0,f,c
  1658  0019FA  0E00               	movlw	0
  1659  0019FC  1644               	andwf	(___fltol@f1+3)^0,f,c
  1660  0019FE  0E96               	movlw	150
  1661  001A00  5E4A               	subwf	___fltol@exp1^0,f,c
  1662  001A02  BE4A               	btfsc	___fltol@exp1^0,7,c
  1663  001A04  EF08  F00D         	goto	u1060
  1664  001A08  EF06  F00D         	goto	u1061
  1665  001A0C                     u1061:
  1666  001A0C  EF1E  F00D         	goto	l1597
  1667  001A10                     u1060:
  1668  001A10  504A               	movf	___fltol@exp1^0,w,c
  1669  001A12  0A80               	xorlw	128
  1670  001A14  0F97               	addlw	151
  1671  001A16  B0D8               	btfsc	status,0,c
  1672  001A18  EF10  F00D         	goto	u1071
  1673  001A1C  EF12  F00D         	goto	u1070
  1674  001A20                     u1071:
  1675  001A20  EF14  F00D         	goto	l1593
  1676  001A24                     u1070:
  1677  001A24  EFD7  F00C         	goto	l1573
  1678  001A28                     l1593:
  1679  001A28  90D8               	bcf	status,0,c
  1680  001A2A  3244               	rrcf	(___fltol@f1+3)^0,f,c
  1681  001A2C  3243               	rrcf	(___fltol@f1+2)^0,f,c
  1682  001A2E  3242               	rrcf	(___fltol@f1+1)^0,f,c
  1683  001A30  3241               	rrcf	___fltol@f1^0,f,c
  1684  001A32  3E4A               	incfsz	___fltol@exp1^0,f,c
  1685  001A34  EF14  F00D         	goto	l1593
  1686  001A38  EF36  F00D         	goto	l1607
  1687  001A3C                     l1597:
  1688  001A3C  0E1F               	movlw	31
  1689  001A3E  644A               	cpfsgt	___fltol@exp1^0,c
  1690  001A40  EF24  F00D         	goto	u1081
  1691  001A44  EF26  F00D         	goto	u1080
  1692  001A48                     u1081:
  1693  001A48  EF2E  F00D         	goto	l1605
  1694  001A4C                     u1080:
  1695  001A4C  EFD7  F00C         	goto	l1573
  1696  001A50                     l1603:
  1697  001A50  90D8               	bcf	status,0,c
  1698  001A52  3641               	rlcf	___fltol@f1^0,f,c
  1699  001A54  3642               	rlcf	(___fltol@f1+1)^0,f,c
  1700  001A56  3643               	rlcf	(___fltol@f1+2)^0,f,c
  1701  001A58  3644               	rlcf	(___fltol@f1+3)^0,f,c
  1702  001A5A  064A               	decf	___fltol@exp1^0,f,c
  1703  001A5C                     l1605:
  1704  001A5C  504A               	movf	___fltol@exp1^0,w,c
  1705  001A5E  A4D8               	btfss	status,2,c
  1706  001A60  EF34  F00D         	goto	u1091
  1707  001A64  EF36  F00D         	goto	u1090
  1708  001A68                     u1091:
  1709  001A68  EF28  F00D         	goto	l1603
  1710  001A6C                     u1090:
  1711  001A6C                     l1607:
  1712  001A6C  5049               	movf	___fltol@sign1^0,w,c
  1713  001A6E  B4D8               	btfsc	status,2,c
  1714  001A70  EF3C  F00D         	goto	u1101
  1715  001A74  EF3E  F00D         	goto	u1100
  1716  001A78                     u1101:
  1717  001A78  EF46  F00D         	goto	l1611
  1718  001A7C                     u1100:
  1719  001A7C  1E44               	comf	(___fltol@f1+3)^0,f,c
  1720  001A7E  1E43               	comf	(___fltol@f1+2)^0,f,c
  1721  001A80  1E42               	comf	(___fltol@f1+1)^0,f,c
  1722  001A82  6C41               	negf	___fltol@f1^0,c
  1723  001A84  0E00               	movlw	0
  1724  001A86  2242               	addwfc	(___fltol@f1+1)^0,f,c
  1725  001A88  2243               	addwfc	(___fltol@f1+2)^0,f,c
  1726  001A8A  2244               	addwfc	(___fltol@f1+3)^0,f,c
  1727  001A8C                     l1611:
  1728  001A8C  C041  F041         	movff	___fltol@f1,?___fltol
  1729  001A90  C042  F042         	movff	___fltol@f1+1,?___fltol+1
  1730  001A94  C043  F043         	movff	___fltol@f1+2,?___fltol+2
  1731  001A98  C044  F044         	movff	___fltol@f1+3,?___fltol+3
  1732  001A9C                     l401:
  1733  001A9C  0012               	return		;funcret
  1734  001A9E                     __end_of___fltol:
  1735                           	callstack 0
  1736                           
  1737 ;; *************** function ___flmul *****************
  1738 ;; Defined at:
  1739 ;;		line 8 in file "/opt/microchip/xc8/v2.31/pic/sources/c99/common/sprcmul.c"
  1740 ;; Parameters:    Size  Location     Type
  1741 ;;  b               4   39[COMRAM] long 
  1742 ;;  a               4   43[COMRAM] long 
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;  prod            4   58[COMRAM] struct .
  1745 ;;  grs             4   52[COMRAM] unsigned long 
  1746 ;;  temp            2   62[COMRAM] struct .
  1747 ;;  bexp            1   57[COMRAM] unsigned char 
  1748 ;;  aexp            1   56[COMRAM] unsigned char 
  1749 ;;  sign            1   51[COMRAM] unsigned char 
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  4   39[COMRAM] unsigned char 
  1752 ;; Registers used:
  1753 ;;		wreg, status,2, status,0, prodl, prodh
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1759 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1760 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1761 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1762 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1763 ;;Total ram usage:       25 bytes
  1764 ;; Hardware stack levels used:    1
  1765 ;; This function calls:
  1766 ;;		Nothing
  1767 ;; This function is called by:
  1768 ;;		_main
  1769 ;;		_LCDWriteFloat
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773                           	psect	text7
  1774  001020                     __ptext7:
  1775                           	callstack 0
  1776  001020                     ___flmul:
  1777                           	callstack 30
  1778  001020  502B               	movf	(___flmul@b+3)^0,w,c
  1779  001022  0B80               	andlw	128
  1780  001024  6E34               	movwf	___flmul@sign^0,c
  1781  001026  502B               	movf	(___flmul@b+3)^0,w,c
  1782  001028  242B               	addwf	(___flmul@b+3)^0,w,c
  1783  00102A  6E3A               	movwf	___flmul@bexp^0,c
  1784  00102C  AE2A               	btfss	(___flmul@b+2)^0,7,c
  1785  00102E  EF1B  F008         	goto	u851
  1786  001032  EF1D  F008         	goto	u850
  1787  001036                     u851:
  1788  001036  EF1E  F008         	goto	l1447
  1789  00103A                     u850:
  1790  00103A  803A               	bsf	___flmul@bexp^0,0,c
  1791  00103C                     l1447:
  1792  00103C  503A               	movf	___flmul@bexp^0,w,c
  1793  00103E  B4D8               	btfsc	status,2,c
  1794  001040  EF24  F008         	goto	u861
  1795  001044  EF26  F008         	goto	u860
  1796  001048                     u861:
  1797  001048  EF39  F008         	goto	l1455
  1798  00104C                     u860:
  1799  00104C  283A               	incf	___flmul@bexp^0,w,c
  1800  00104E  A4D8               	btfss	status,2,c
  1801  001050  EF2C  F008         	goto	u871
  1802  001054  EF2E  F008         	goto	u870
  1803  001058                     u871:
  1804  001058  EF36  F008         	goto	l1453
  1805  00105C                     u870:
  1806  00105C  0E00               	movlw	0
  1807  00105E  6E28               	movwf	___flmul@b^0,c
  1808  001060  0E00               	movlw	0
  1809  001062  6E29               	movwf	(___flmul@b+1)^0,c
  1810  001064  0E00               	movlw	0
  1811  001066  6E2A               	movwf	(___flmul@b+2)^0,c
  1812  001068  0E00               	movlw	0
  1813  00106A  6E2B               	movwf	(___flmul@b+3)^0,c
  1814  00106C                     l1453:
  1815  00106C  8E2A               	bsf	(___flmul@b+2)^0,7,c
  1816  00106E  EF41  F008         	goto	l1457
  1817  001072                     l1455:
  1818  001072  0E00               	movlw	0
  1819  001074  6E28               	movwf	___flmul@b^0,c
  1820  001076  0E00               	movlw	0
  1821  001078  6E29               	movwf	(___flmul@b+1)^0,c
  1822  00107A  0E00               	movlw	0
  1823  00107C  6E2A               	movwf	(___flmul@b+2)^0,c
  1824  00107E  0E00               	movlw	0
  1825  001080  6E2B               	movwf	(___flmul@b+3)^0,c
  1826  001082                     l1457:
  1827  001082  502F               	movf	(___flmul@a+3)^0,w,c
  1828  001084  0B80               	andlw	128
  1829  001086  1A34               	xorwf	___flmul@sign^0,f,c
  1830  001088  502F               	movf	(___flmul@a+3)^0,w,c
  1831  00108A  242F               	addwf	(___flmul@a+3)^0,w,c
  1832  00108C  6E39               	movwf	___flmul@aexp^0,c
  1833  00108E  AE2E               	btfss	(___flmul@a+2)^0,7,c
  1834  001090  EF4C  F008         	goto	u881
  1835  001094  EF4E  F008         	goto	u880
  1836  001098                     u881:
  1837  001098  EF4F  F008         	goto	l1465
  1838  00109C                     u880:
  1839  00109C  8039               	bsf	___flmul@aexp^0,0,c
  1840  00109E                     l1465:
  1841  00109E  5039               	movf	___flmul@aexp^0,w,c
  1842  0010A0  B4D8               	btfsc	status,2,c
  1843  0010A2  EF55  F008         	goto	u891
  1844  0010A6  EF57  F008         	goto	u890
  1845  0010AA                     u891:
  1846  0010AA  EF6A  F008         	goto	l1473
  1847  0010AE                     u890:
  1848  0010AE  2839               	incf	___flmul@aexp^0,w,c
  1849  0010B0  A4D8               	btfss	status,2,c
  1850  0010B2  EF5D  F008         	goto	u901
  1851  0010B6  EF5F  F008         	goto	u900
  1852  0010BA                     u901:
  1853  0010BA  EF67  F008         	goto	l1471
  1854  0010BE                     u900:
  1855  0010BE  0E00               	movlw	0
  1856  0010C0  6E2C               	movwf	___flmul@a^0,c
  1857  0010C2  0E00               	movlw	0
  1858  0010C4  6E2D               	movwf	(___flmul@a+1)^0,c
  1859  0010C6  0E00               	movlw	0
  1860  0010C8  6E2E               	movwf	(___flmul@a+2)^0,c
  1861  0010CA  0E00               	movlw	0
  1862  0010CC  6E2F               	movwf	(___flmul@a+3)^0,c
  1863  0010CE                     l1471:
  1864  0010CE  8E2E               	bsf	(___flmul@a+2)^0,7,c
  1865  0010D0  EF72  F008         	goto	l718
  1866  0010D4                     l1473:
  1867  0010D4  0E00               	movlw	0
  1868  0010D6  6E2C               	movwf	___flmul@a^0,c
  1869  0010D8  0E00               	movlw	0
  1870  0010DA  6E2D               	movwf	(___flmul@a+1)^0,c
  1871  0010DC  0E00               	movlw	0
  1872  0010DE  6E2E               	movwf	(___flmul@a+2)^0,c
  1873  0010E0  0E00               	movlw	0
  1874  0010E2  6E2F               	movwf	(___flmul@a+3)^0,c
  1875  0010E4                     l718:
  1876  0010E4  5039               	movf	___flmul@aexp^0,w,c
  1877  0010E6  B4D8               	btfsc	status,2,c
  1878  0010E8  EF78  F008         	goto	u911
  1879  0010EC  EF7A  F008         	goto	u910
  1880  0010F0                     u911:
  1881  0010F0  EF82  F008         	goto	l1477
  1882  0010F4                     u910:
  1883  0010F4  503A               	movf	___flmul@bexp^0,w,c
  1884  0010F6  A4D8               	btfss	status,2,c
  1885  0010F8  EF80  F008         	goto	u921
  1886  0010FC  EF82  F008         	goto	u920
  1887  001100                     u921:
  1888  001100  EF8C  F008         	goto	l1481
  1889  001104                     u920:
  1890  001104                     l1477:
  1891  001104  0E00               	movlw	0
  1892  001106  6E28               	movwf	?___flmul^0,c
  1893  001108  0E00               	movlw	0
  1894  00110A  6E29               	movwf	(?___flmul+1)^0,c
  1895  00110C  0E00               	movlw	0
  1896  00110E  6E2A               	movwf	(?___flmul+2)^0,c
  1897  001110  0E00               	movlw	0
  1898  001112  6E2B               	movwf	(?___flmul+3)^0,c
  1899  001114  EF24  F00A         	goto	l722
  1900  001118                     l1481:
  1901  001118  502E               	movf	(___flmul@a+2)^0,w,c
  1902  00111A  0228               	mulwf	___flmul@b^0,c
  1903  00111C  CFF3 F03F          	movff	prodl,___flmul@temp
  1904  001120  CFF4 F040          	movff	prodh,___flmul@temp+1
  1905  001124  503F               	movf	___flmul@temp^0,w,c
  1906  001126  6E35               	movwf	___flmul@grs^0,c
  1907  001128  6A36               	clrf	(___flmul@grs+1)^0,c
  1908  00112A  6A37               	clrf	(___flmul@grs+2)^0,c
  1909  00112C  6A38               	clrf	(___flmul@grs+3)^0,c
  1910  00112E  5040               	movf	(___flmul@temp+1)^0,w,c
  1911  001130  6E3B               	movwf	___flmul@prod^0,c
  1912  001132  6A3C               	clrf	(___flmul@prod+1)^0,c
  1913  001134  6A3D               	clrf	(___flmul@prod+2)^0,c
  1914  001136  6A3E               	clrf	(___flmul@prod+3)^0,c
  1915  001138  502D               	movf	(___flmul@a+1)^0,w,c
  1916  00113A  0229               	mulwf	(___flmul@b+1)^0,c
  1917  00113C  CFF3 F03F          	movff	prodl,___flmul@temp
  1918  001140  CFF4 F040          	movff	prodh,___flmul@temp+1
  1919  001144  503F               	movf	___flmul@temp^0,w,c
  1920  001146  2635               	addwf	___flmul@grs^0,f,c
  1921  001148  0E00               	movlw	0
  1922  00114A  2236               	addwfc	(___flmul@grs+1)^0,f,c
  1923  00114C  2237               	addwfc	(___flmul@grs+2)^0,f,c
  1924  00114E  2238               	addwfc	(___flmul@grs+3)^0,f,c
  1925  001150  5040               	movf	(___flmul@temp+1)^0,w,c
  1926  001152  263B               	addwf	___flmul@prod^0,f,c
  1927  001154  0E00               	movlw	0
  1928  001156  223C               	addwfc	(___flmul@prod+1)^0,f,c
  1929  001158  223D               	addwfc	(___flmul@prod+2)^0,f,c
  1930  00115A  223E               	addwfc	(___flmul@prod+3)^0,f,c
  1931  00115C  502C               	movf	___flmul@a^0,w,c
  1932  00115E  022A               	mulwf	(___flmul@b+2)^0,c
  1933  001160  CFF3 F03F          	movff	prodl,___flmul@temp
  1934  001164  CFF4 F040          	movff	prodh,___flmul@temp+1
  1935  001168  503F               	movf	___flmul@temp^0,w,c
  1936  00116A  2635               	addwf	___flmul@grs^0,f,c
  1937  00116C  0E00               	movlw	0
  1938  00116E  2236               	addwfc	(___flmul@grs+1)^0,f,c
  1939  001170  2237               	addwfc	(___flmul@grs+2)^0,f,c
  1940  001172  2238               	addwfc	(___flmul@grs+3)^0,f,c
  1941  001174  5040               	movf	(___flmul@temp+1)^0,w,c
  1942  001176  263B               	addwf	___flmul@prod^0,f,c
  1943  001178  0E00               	movlw	0
  1944  00117A  223C               	addwfc	(___flmul@prod+1)^0,f,c
  1945  00117C  223D               	addwfc	(___flmul@prod+2)^0,f,c
  1946  00117E  223E               	addwfc	(___flmul@prod+3)^0,f,c
  1947  001180  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  1948  001184  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  1949  001188  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  1950  00118C  6A35               	clrf	___flmul@grs^0,c
  1951  00118E  502C               	movf	___flmul@a^0,w,c
  1952  001190  0229               	mulwf	(___flmul@b+1)^0,c
  1953  001192  CFF3 F03F          	movff	prodl,___flmul@temp
  1954  001196  CFF4 F040          	movff	prodh,___flmul@temp+1
  1955  00119A  503F               	movf	___flmul@temp^0,w,c
  1956  00119C  2635               	addwf	___flmul@grs^0,f,c
  1957  00119E  5040               	movf	(___flmul@temp+1)^0,w,c
  1958  0011A0  2236               	addwfc	(___flmul@grs+1)^0,f,c
  1959  0011A2  0E00               	movlw	0
  1960  0011A4  2237               	addwfc	(___flmul@grs+2)^0,f,c
  1961  0011A6  0E00               	movlw	0
  1962  0011A8  2238               	addwfc	(___flmul@grs+3)^0,f,c
  1963  0011AA  502D               	movf	(___flmul@a+1)^0,w,c
  1964  0011AC  0228               	mulwf	___flmul@b^0,c
  1965  0011AE  CFF3 F03F          	movff	prodl,___flmul@temp
  1966  0011B2  CFF4 F040          	movff	prodh,___flmul@temp+1
  1967  0011B6  503F               	movf	___flmul@temp^0,w,c
  1968  0011B8  2635               	addwf	___flmul@grs^0,f,c
  1969  0011BA  5040               	movf	(___flmul@temp+1)^0,w,c
  1970  0011BC  2236               	addwfc	(___flmul@grs+1)^0,f,c
  1971  0011BE  0E00               	movlw	0
  1972  0011C0  2237               	addwfc	(___flmul@grs+2)^0,f,c
  1973  0011C2  0E00               	movlw	0
  1974  0011C4  2238               	addwfc	(___flmul@grs+3)^0,f,c
  1975  0011C6  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  1976  0011CA  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  1977  0011CE  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  1978  0011D2  6A35               	clrf	___flmul@grs^0,c
  1979  0011D4  502C               	movf	___flmul@a^0,w,c
  1980  0011D6  0228               	mulwf	___flmul@b^0,c
  1981  0011D8  CFF3 F03F          	movff	prodl,___flmul@temp
  1982  0011DC  CFF4 F040          	movff	prodh,___flmul@temp+1
  1983  0011E0  503F               	movf	___flmul@temp^0,w,c
  1984  0011E2  2635               	addwf	___flmul@grs^0,f,c
  1985  0011E4  5040               	movf	(___flmul@temp+1)^0,w,c
  1986  0011E6  2236               	addwfc	(___flmul@grs+1)^0,f,c
  1987  0011E8  0E00               	movlw	0
  1988  0011EA  2237               	addwfc	(___flmul@grs+2)^0,f,c
  1989  0011EC  0E00               	movlw	0
  1990  0011EE  2238               	addwfc	(___flmul@grs+3)^0,f,c
  1991  0011F0  502E               	movf	(___flmul@a+2)^0,w,c
  1992  0011F2  0229               	mulwf	(___flmul@b+1)^0,c
  1993  0011F4  CFF3 F03F          	movff	prodl,___flmul@temp
  1994  0011F8  CFF4 F040          	movff	prodh,___flmul@temp+1
  1995  0011FC  503F               	movf	___flmul@temp^0,w,c
  1996  0011FE  263B               	addwf	___flmul@prod^0,f,c
  1997  001200  5040               	movf	(___flmul@temp+1)^0,w,c
  1998  001202  223C               	addwfc	(___flmul@prod+1)^0,f,c
  1999  001204  0E00               	movlw	0
  2000  001206  223D               	addwfc	(___flmul@prod+2)^0,f,c
  2001  001208  0E00               	movlw	0
  2002  00120A  223E               	addwfc	(___flmul@prod+3)^0,f,c
  2003  00120C  502D               	movf	(___flmul@a+1)^0,w,c
  2004  00120E  022A               	mulwf	(___flmul@b+2)^0,c
  2005  001210  CFF3 F03F          	movff	prodl,___flmul@temp
  2006  001214  CFF4 F040          	movff	prodh,___flmul@temp+1
  2007  001218  503F               	movf	___flmul@temp^0,w,c
  2008  00121A  263B               	addwf	___flmul@prod^0,f,c
  2009  00121C  5040               	movf	(___flmul@temp+1)^0,w,c
  2010  00121E  223C               	addwfc	(___flmul@prod+1)^0,f,c
  2011  001220  0E00               	movlw	0
  2012  001222  223D               	addwfc	(___flmul@prod+2)^0,f,c
  2013  001224  0E00               	movlw	0
  2014  001226  223E               	addwfc	(___flmul@prod+3)^0,f,c
  2015  001228  502E               	movf	(___flmul@a+2)^0,w,c
  2016  00122A  022A               	mulwf	(___flmul@b+2)^0,c
  2017  00122C  CFF3 F03F          	movff	prodl,___flmul@temp
  2018  001230  CFF4 F040          	movff	prodh,___flmul@temp+1
  2019  001234  503F               	movf	___flmul@temp^0,w,c
  2020  001236  6E30               	movwf	??___flmul^0,c
  2021  001238  5040               	movf	(___flmul@temp+1)^0,w,c
  2022  00123A  6E31               	movwf	(??___flmul+1)^0,c
  2023  00123C  6A32               	clrf	(??___flmul+2)^0,c
  2024  00123E  6A33               	clrf	(??___flmul+3)^0,c
  2025  001240  C032  F033         	movff	??___flmul+2,??___flmul+3
  2026  001244  C031  F032         	movff	??___flmul+1,??___flmul+2
  2027  001248  C030  F031         	movff	??___flmul,??___flmul+1
  2028  00124C  6A30               	clrf	??___flmul^0,c
  2029  00124E  5030               	movf	??___flmul^0,w,c
  2030  001250  263B               	addwf	___flmul@prod^0,f,c
  2031  001252  5031               	movf	(??___flmul+1)^0,w,c
  2032  001254  223C               	addwfc	(___flmul@prod+1)^0,f,c
  2033  001256  5032               	movf	(??___flmul+2)^0,w,c
  2034  001258  223D               	addwfc	(___flmul@prod+2)^0,f,c
  2035  00125A  5033               	movf	(??___flmul+3)^0,w,c
  2036  00125C  223E               	addwfc	(___flmul@prod+3)^0,f,c
  2037  00125E  C035  F030         	movff	___flmul@grs,??___flmul
  2038  001262  C036  F031         	movff	___flmul@grs+1,??___flmul+1
  2039  001266  C037  F032         	movff	___flmul@grs+2,??___flmul+2
  2040  00126A  C038  F033         	movff	___flmul@grs+3,??___flmul+3
  2041  00126E  0E19               	movlw	25
  2042  001270  EF3F  F009         	goto	u930
  2043  001274                     u935:
  2044  001274  90D8               	bcf	status,0,c
  2045  001276  3233               	rrcf	(??___flmul+3)^0,f,c
  2046  001278  3232               	rrcf	(??___flmul+2)^0,f,c
  2047  00127A  3231               	rrcf	(??___flmul+1)^0,f,c
  2048  00127C  3230               	rrcf	??___flmul^0,f,c
  2049  00127E                     u930:
  2050  00127E  2EE8               	decfsz	wreg,f,c
  2051  001280  EF3A  F009         	goto	u935
  2052  001284  5030               	movf	??___flmul^0,w,c
  2053  001286  263B               	addwf	___flmul@prod^0,f,c
  2054  001288  5031               	movf	(??___flmul+1)^0,w,c
  2055  00128A  223C               	addwfc	(___flmul@prod+1)^0,f,c
  2056  00128C  5032               	movf	(??___flmul+2)^0,w,c
  2057  00128E  223D               	addwfc	(___flmul@prod+2)^0,f,c
  2058  001290  5033               	movf	(??___flmul+3)^0,w,c
  2059  001292  223E               	addwfc	(___flmul@prod+3)^0,f,c
  2060  001294  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  2061  001298  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  2062  00129C  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  2063  0012A0  6A35               	clrf	___flmul@grs^0,c
  2064  0012A2  5039               	movf	___flmul@aexp^0,w,c
  2065  0012A4  C03A  F030         	movff	___flmul@bexp,??___flmul
  2066  0012A8  6A31               	clrf	(??___flmul+1)^0,c
  2067  0012AA  2630               	addwf	??___flmul^0,f,c
  2068  0012AC  0E00               	movlw	0
  2069  0012AE  2231               	addwfc	(??___flmul+1)^0,f,c
  2070  0012B0  0E82               	movlw	130
  2071  0012B2  2430               	addwf	??___flmul^0,w,c
  2072  0012B4  6E3F               	movwf	___flmul@temp^0,c
  2073  0012B6  0EFF               	movlw	255
  2074  0012B8  2031               	addwfc	(??___flmul+1)^0,w,c
  2075  0012BA  6E40               	movwf	(___flmul@temp+1)^0,c
  2076  0012BC  EF75  F009         	goto	l1529
  2077  0012C0                     l1523:
  2078  0012C0  90D8               	bcf	status,0,c
  2079  0012C2  363B               	rlcf	___flmul@prod^0,f,c
  2080  0012C4  363C               	rlcf	(___flmul@prod+1)^0,f,c
  2081  0012C6  363D               	rlcf	(___flmul@prod+2)^0,f,c
  2082  0012C8  363E               	rlcf	(___flmul@prod+3)^0,f,c
  2083  0012CA  AE38               	btfss	(___flmul@grs+3)^0,7,c
  2084  0012CC  EF6A  F009         	goto	u941
  2085  0012D0  EF6C  F009         	goto	u940
  2086  0012D4                     u941:
  2087  0012D4  EF6D  F009         	goto	l725
  2088  0012D8                     u940:
  2089  0012D8  803B               	bsf	___flmul@prod^0,0,c
  2090  0012DA                     l725:
  2091  0012DA  90D8               	bcf	status,0,c
  2092  0012DC  3635               	rlcf	___flmul@grs^0,f,c
  2093  0012DE  3636               	rlcf	(___flmul@grs+1)^0,f,c
  2094  0012E0  3637               	rlcf	(___flmul@grs+2)^0,f,c
  2095  0012E2  3638               	rlcf	(___flmul@grs+3)^0,f,c
  2096  0012E4  063F               	decf	___flmul@temp^0,f,c
  2097  0012E6  A0D8               	btfss	status,0,c
  2098  0012E8  0640               	decf	(___flmul@temp+1)^0,f,c
  2099  0012EA                     l1529:
  2100  0012EA  AE3D               	btfss	(___flmul@prod+2)^0,7,c
  2101  0012EC  EF7A  F009         	goto	u951
  2102  0012F0  EF7C  F009         	goto	u950
  2103  0012F4                     u951:
  2104  0012F4  EF60  F009         	goto	l1523
  2105  0012F8                     u950:
  2106  0012F8  0E00               	movlw	0
  2107  0012FA  6E39               	movwf	___flmul@aexp^0,c
  2108  0012FC  AE38               	btfss	(___flmul@grs+3)^0,7,c
  2109  0012FE  EF83  F009         	goto	u961
  2110  001302  EF85  F009         	goto	u960
  2111  001306                     u961:
  2112  001306  EFA9  F009         	goto	l727
  2113  00130A                     u960:
  2114  00130A  0EFF               	movlw	255
  2115  00130C  1435               	andwf	___flmul@grs^0,w,c
  2116  00130E  6E30               	movwf	??___flmul^0,c
  2117  001310  0EFF               	movlw	255
  2118  001312  1436               	andwf	(___flmul@grs+1)^0,w,c
  2119  001314  6E31               	movwf	(??___flmul+1)^0,c
  2120  001316  0EFF               	movlw	255
  2121  001318  1437               	andwf	(___flmul@grs+2)^0,w,c
  2122  00131A  6E32               	movwf	(??___flmul+2)^0,c
  2123  00131C  0E7F               	movlw	127
  2124  00131E  1438               	andwf	(___flmul@grs+3)^0,w,c
  2125  001320  6E33               	movwf	(??___flmul+3)^0,c
  2126  001322  5030               	movf	??___flmul^0,w,c
  2127  001324  1031               	iorwf	(??___flmul+1)^0,w,c
  2128  001326  1032               	iorwf	(??___flmul+2)^0,w,c
  2129  001328  1033               	iorwf	(??___flmul+3)^0,w,c
  2130  00132A  B4D8               	btfsc	status,2,c
  2131  00132C  EF9A  F009         	goto	u971
  2132  001330  EF9C  F009         	goto	u970
  2133  001334                     u971:
  2134  001334  EFA0  F009         	goto	l728
  2135  001338                     u970:
  2136  001338                     l1537:
  2137  001338  0E01               	movlw	1
  2138  00133A  6E39               	movwf	___flmul@aexp^0,c
  2139  00133C  EFA9  F009         	goto	l727
  2140  001340                     l728:
  2141  001340  A03B               	btfss	___flmul@prod^0,0,c
  2142  001342  EFA5  F009         	goto	u981
  2143  001346  EFA7  F009         	goto	u980
  2144  00134A                     u981:
  2145  00134A  EFA9  F009         	goto	l727
  2146  00134E                     u980:
  2147  00134E  EF9C  F009         	goto	l1537
  2148  001352                     l727:
  2149  001352  5039               	movf	___flmul@aexp^0,w,c
  2150  001354  B4D8               	btfsc	status,2,c
  2151  001356  EFAF  F009         	goto	u991
  2152  00135A  EFB1  F009         	goto	u990
  2153  00135E                     u991:
  2154  00135E  EFD5  F009         	goto	l1549
  2155  001362                     u990:
  2156  001362  0E01               	movlw	1
  2157  001364  263B               	addwf	___flmul@prod^0,f,c
  2158  001366  0E00               	movlw	0
  2159  001368  223C               	addwfc	(___flmul@prod+1)^0,f,c
  2160  00136A  223D               	addwfc	(___flmul@prod+2)^0,f,c
  2161  00136C  223E               	addwfc	(___flmul@prod+3)^0,f,c
  2162  00136E  A03E               	btfss	(___flmul@prod+3)^0,0,c
  2163  001370  EFBC  F009         	goto	u1001
  2164  001374  EFBE  F009         	goto	u1000
  2165  001378                     u1001:
  2166  001378  EFD5  F009         	goto	l1549
  2167  00137C                     u1000:
  2168  00137C  C03B  F030         	movff	___flmul@prod,??___flmul
  2169  001380  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
  2170  001384  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
  2171  001388  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
  2172  00138C  3433               	rlcf	(??___flmul+3)^0,w,c
  2173  00138E  3233               	rrcf	(??___flmul+3)^0,f,c
  2174  001390  3232               	rrcf	(??___flmul+2)^0,f,c
  2175  001392  3231               	rrcf	(??___flmul+1)^0,f,c
  2176  001394  3230               	rrcf	??___flmul^0,f,c
  2177  001396  C030  F03B         	movff	??___flmul,___flmul@prod
  2178  00139A  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
  2179  00139E  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
  2180  0013A2  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
  2181  0013A6  4A3F               	infsnz	___flmul@temp^0,f,c
  2182  0013A8  2A40               	incf	(___flmul@temp+1)^0,f,c
  2183  0013AA                     l1549:
  2184  0013AA  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  2185  0013AC  EFE0  F009         	goto	u1011
  2186  0013B0  5040               	movf	(___flmul@temp+1)^0,w,c
  2187  0013B2  E108               	bnz	u1010
  2188  0013B4  283F               	incf	___flmul@temp^0,w,c
  2189  0013B6  A0D8               	btfss	status,0,c
  2190  0013B8  EFE0  F009         	goto	u1011
  2191  0013BC  EFE2  F009         	goto	u1010
  2192  0013C0                     u1011:
  2193  0013C0  EFEC  F009         	goto	l1553
  2194  0013C4                     u1010:
  2195  0013C4  0E00               	movlw	0
  2196  0013C6  6E3B               	movwf	___flmul@prod^0,c
  2197  0013C8  0E00               	movlw	0
  2198  0013CA  6E3C               	movwf	(___flmul@prod+1)^0,c
  2199  0013CC  0E80               	movlw	128
  2200  0013CE  6E3D               	movwf	(___flmul@prod+2)^0,c
  2201  0013D0  0E7F               	movlw	127
  2202  0013D2  6E3E               	movwf	(___flmul@prod+3)^0,c
  2203  0013D4  EF1A  F00A         	goto	l1565
  2204  0013D8                     l1553:
  2205  0013D8  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  2206  0013DA  EFF9  F009         	goto	u1020
  2207  0013DE  5040               	movf	(___flmul@temp+1)^0,w,c
  2208  0013E0  E106               	bnz	u1021
  2209  0013E2  043F               	decf	___flmul@temp^0,w,c
  2210  0013E4  B0D8               	btfsc	status,0,c
  2211  0013E6  EFF7  F009         	goto	u1021
  2212  0013EA  EFF9  F009         	goto	u1020
  2213  0013EE                     u1021:
  2214  0013EE  EF05  F00A         	goto	l735
  2215  0013F2                     u1020:
  2216  0013F2  0E00               	movlw	0
  2217  0013F4  6E3B               	movwf	___flmul@prod^0,c
  2218  0013F6  0E00               	movlw	0
  2219  0013F8  6E3C               	movwf	(___flmul@prod+1)^0,c
  2220  0013FA  0E00               	movlw	0
  2221  0013FC  6E3D               	movwf	(___flmul@prod+2)^0,c
  2222  0013FE  0E00               	movlw	0
  2223  001400  6E3E               	movwf	(___flmul@prod+3)^0,c
  2224  001402  0E00               	movlw	0
  2225  001404  6E34               	movwf	___flmul@sign^0,c
  2226  001406  EF1A  F00A         	goto	l1565
  2227  00140A                     l735:
  2228  00140A  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
  2229  00140E  0EFF               	movlw	255
  2230  001410  163B               	andwf	___flmul@prod^0,f,c
  2231  001412  0EFF               	movlw	255
  2232  001414  163C               	andwf	(___flmul@prod+1)^0,f,c
  2233  001416  0E7F               	movlw	127
  2234  001418  163D               	andwf	(___flmul@prod+2)^0,f,c
  2235  00141A  0E00               	movlw	0
  2236  00141C  163E               	andwf	(___flmul@prod+3)^0,f,c
  2237  00141E  A03A               	btfss	___flmul@bexp^0,0,c
  2238  001420  EF14  F00A         	goto	u1031
  2239  001424  EF16  F00A         	goto	u1030
  2240  001428                     u1031:
  2241  001428  EF17  F00A         	goto	l1563
  2242  00142C                     u1030:
  2243  00142C  8E3D               	bsf	(___flmul@prod+2)^0,7,c
  2244  00142E                     l1563:
  2245  00142E  90D8               	bcf	status,0,c
  2246  001430  303A               	rrcf	___flmul@bexp^0,w,c
  2247  001432  6E3E               	movwf	(___flmul@prod+3)^0,c
  2248  001434                     l1565:
  2249  001434  5034               	movf	___flmul@sign^0,w,c
  2250  001436  123E               	iorwf	(___flmul@prod+3)^0,f,c
  2251  001438  C03B  F028         	movff	___flmul@prod,?___flmul
  2252  00143C  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
  2253  001440  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
  2254  001444  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
  2255  001448                     l722:
  2256  001448  0012               	return		;funcret
  2257  00144A                     __end_of___flmul:
  2258                           	callstack 0
  2259                           
  2260 ;; *************** function _LCDWriteStr *****************
  2261 ;; Defined at:
  2262 ;;		line 163 in file "lcd.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;  string          2    6[COMRAM] PTR const unsigned char 
  2265 ;;		 -> LCDWriteInt@string(3), LCDWriteFloat@string(5), LCDWriteHexa@string(3), STR_2(2), 
  2266 ;;		 -> STR_1(11), 
  2267 ;; Auto vars:     Size  Location     Type
  2268 ;;  i               1   10[COMRAM] unsigned char 
  2269 ;; Return value:  Size  Location     Type
  2270 ;;                  1    wreg      void 
  2271 ;; Registers used:
  2272 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2278 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2279 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2280 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2281 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2282 ;;Total ram usage:        5 bytes
  2283 ;; Hardware stack levels used:    1
  2284 ;; Hardware stack levels required when called:    3
  2285 ;; This function calls:
  2286 ;;		_LCDPutChar
  2287 ;; This function is called by:
  2288 ;;		_main
  2289 ;;		_LCDWriteFloat
  2290 ;;		_LCDWriteHexa
  2291 ;;		_LCDWriteInt
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295                           	psect	text8
  2296  001D26                     __ptext8:
  2297                           	callstack 0
  2298  001D26                     _LCDWriteStr:
  2299                           	callstack 27
  2300  001D26                     
  2301                           ;lcd.c: 163: void LCDWriteStr(const char *string);lcd.c: 164: {;lcd.c: 165:   UINT8_T i 
      +                          = 0;
  2302  001D26  0E00               	movlw	0
  2303  001D28  6E0B               	movwf	LCDWriteStr@i^0,c
  2304                           
  2305                           ;lcd.c: 167:   while (string[i])
  2306  001D2A  EFB1  F00E         	goto	l1425
  2307  001D2E                     l1421:
  2308                           
  2309                           ;lcd.c: 168:     LCDPutChar(string[i++]);
  2310  001D2E  500B               	movf	LCDWriteStr@i^0,w,c
  2311  001D30  2407               	addwf	LCDWriteStr@string^0,w,c
  2312  001D32  6E09               	movwf	??_LCDWriteStr^0,c
  2313  001D34  0E00               	movlw	0
  2314  001D36  2008               	addwfc	(LCDWriteStr@string+1)^0,w,c
  2315  001D38  6E0A               	movwf	(??_LCDWriteStr+1)^0,c
  2316  001D3A  C009  FFF6         	movff	??_LCDWriteStr,tblptrl
  2317  001D3E  C00A  FFF7         	movff	??_LCDWriteStr+1,tblptrh
  2318  001D42  0E00               	movlw	low (__smallconst shr (0+16))
  2319  001D44  6EF8               	movwf	tblptru,c
  2320  001D46  0E0F               	movlw	(high __ramtop+-1)
  2321  001D48  64F7               	cpfsgt	tblptrh,c
  2322  001D4A  D003               	bra	u797
  2323  001D4C  0008               	tblrd		*
  2324  001D4E  50F5               	movf	tablat,w,c
  2325  001D50  D005               	bra	u790
  2326  001D52                     u797:
  2327  001D52  CFF6 FFE9          	movff	tblptrl,fsr0l
  2328  001D56  CFF7 FFEA          	movff	tblptrh,fsr0h
  2329  001D5A  50EF               	movf	indf0,w,c
  2330  001D5C                     u790:
  2331  001D5C  ECCB  F00F         	call	_LCDPutChar
  2332  001D60  2A0B               	incf	LCDWriteStr@i^0,f,c
  2333  001D62                     l1425:
  2334                           
  2335                           ;lcd.c: 167:   while (string[i])
  2336  001D62  500B               	movf	LCDWriteStr@i^0,w,c
  2337  001D64  2407               	addwf	LCDWriteStr@string^0,w,c
  2338  001D66  6E09               	movwf	??_LCDWriteStr^0,c
  2339  001D68  0E00               	movlw	0
  2340  001D6A  2008               	addwfc	(LCDWriteStr@string+1)^0,w,c
  2341  001D6C  6E0A               	movwf	(??_LCDWriteStr+1)^0,c
  2342  001D6E  C009  FFF6         	movff	??_LCDWriteStr,tblptrl
  2343  001D72  C00A  FFF7         	movff	??_LCDWriteStr+1,tblptrh
  2344  001D76  0E00               	movlw	low (__smallconst shr (0+16))
  2345  001D78  6EF8               	movwf	tblptru,c
  2346  001D7A  0E0F               	movlw	(high __ramtop+-1)
  2347  001D7C  64F7               	cpfsgt	tblptrh,c
  2348  001D7E  D003               	bra	u807
  2349  001D80  0008               	tblrd		*
  2350  001D82  50F5               	movf	tablat,w,c
  2351  001D84  D005               	bra	u800
  2352  001D86                     u807:
  2353  001D86  CFF6 FFE9          	movff	tblptrl,fsr0l
  2354  001D8A  CFF7 FFEA          	movff	tblptrh,fsr0h
  2355  001D8E  50EF               	movf	indf0,w,c
  2356  001D90                     u800:
  2357  001D90  0900               	iorlw	0
  2358  001D92  A4D8               	btfss	status,2,c
  2359  001D94  EFCE  F00E         	goto	u811
  2360  001D98  EFD0  F00E         	goto	u810
  2361  001D9C                     u811:
  2362  001D9C  EF97  F00E         	goto	l1421
  2363  001DA0                     u810:
  2364  001DA0  0012               	return		;funcret
  2365  001DA2                     __end_of_LCDWriteStr:
  2366                           	callstack 0
  2367                           
  2368 ;; *************** function _LCDPutChar *****************
  2369 ;; Defined at:
  2370 ;;		line 150 in file "lcd.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;  data            1    wreg     unsigned char 
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;  data            1    5[COMRAM] unsigned char 
  2375 ;; Return value:  Size  Location     Type
  2376 ;;                  1    wreg      void 
  2377 ;; Registers used:
  2378 ;;		wreg, status,2, status,0, cstack
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2385 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2387 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2388 ;;Total ram usage:        1 bytes
  2389 ;; Hardware stack levels used:    1
  2390 ;; Hardware stack levels required when called:    2
  2391 ;; This function calls:
  2392 ;;		_WaitLCD
  2393 ;;		_WriteByte
  2394 ;; This function is called by:
  2395 ;;		_LCDWriteStr
  2396 ;;		_LCDPutByte
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400                           	psect	text9
  2401  001F96                     __ptext9:
  2402                           	callstack 0
  2403  001F96                     _LCDPutChar:
  2404                           	callstack 27
  2405                           
  2406                           ;incstack = 0
  2407                           ;LCDPutChar@data stored from wreg
  2408  001F96  6E06               	movwf	LCDPutChar@data^0,c
  2409  001F98                     
  2410                           ;lcd.c: 150: void LCDPutChar(UINT8_T data);lcd.c: 151: {;lcd.c: 152:     WriteByte(0, da
      +                          ta);
  2411  001F98  C006  F004         	movff	LCDPutChar@data,WriteByte@data
  2412  001F9C  0E00               	movlw	0
  2413  001F9E  ECBE  F00F         	call	_WriteByte
  2414                           
  2415                           ;lcd.c: 153:     WaitLCD();
  2416  001FA2  ECB0  F00F         	call	_WaitLCD	;wreg free
  2417  001FA6  0012               	return		;funcret
  2418  001FA8                     __end_of_LCDPutChar:
  2419                           	callstack 0
  2420                           
  2421 ;; *************** function _LCDGoto *****************
  2422 ;; Defined at:
  2423 ;;		line 141 in file "lcd.c"
  2424 ;; Parameters:    Size  Location     Type
  2425 ;;  column          1    wreg     unsigned char 
  2426 ;;  row             1    5[COMRAM] unsigned char 
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;  column          1   10[COMRAM] unsigned char 
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  1    wreg      void 
  2431 ;; Registers used:
  2432 ;;		wreg, status,2, status,0, cstack
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2438 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2439 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2440 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2441 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2442 ;;Total ram usage:        6 bytes
  2443 ;; Hardware stack levels used:    1
  2444 ;; Hardware stack levels required when called:    2
  2445 ;; This function calls:
  2446 ;;		_WaitLCD
  2447 ;;		_WriteByte
  2448 ;; This function is called by:
  2449 ;;		_LCDWriteFloat
  2450 ;;		_LCDWriteHexa
  2451 ;;		_LCDWriteInt
  2452 ;; This function uses a non-reentrant model
  2453 ;;
  2454                           
  2455                           	psect	text10
  2456  001E16                     __ptext10:
  2457                           	callstack 0
  2458  001E16                     _LCDGoto:
  2459                           	callstack 27
  2460                           
  2461                           ;incstack = 0
  2462                           ;LCDGoto@column stored from wreg
  2463  001E16  6E0B               	movwf	LCDGoto@column^0,c
  2464  001E18                     
  2465                           ;lcd.c: 141: void LCDGoto(UINT8_T column, UINT8_T row);lcd.c: 142: {;lcd.c: 143:     if 
      +                          ((row > (2 - 1)) || (column > (16 - 1)))
  2466  001E18  0E02               	movlw	2
  2467  001E1A  6006               	cpfslt	LCDGoto@row^0,c
  2468  001E1C  EF12  F00F         	goto	u821
  2469  001E20  EF14  F00F         	goto	u820
  2470  001E24                     u821:
  2471  001E24  EF3F  F00F         	goto	l70
  2472  001E28                     u820:
  2473  001E28  0E0F               	movlw	15
  2474  001E2A  640B               	cpfsgt	LCDGoto@column^0,c
  2475  001E2C  EF1A  F00F         	goto	u831
  2476  001E30  EF1C  F00F         	goto	u830
  2477  001E34                     u831:
  2478  001E34  EF1E  F00F         	goto	l1431
  2479  001E38                     u830:
  2480  001E38  EF3F  F00F         	goto	l70
  2481  001E3C                     l1431:
  2482                           
  2483                           ;lcd.c: 146:     WriteByte(1, (row == 1) ? (0xC0 | column) : (0x80 | column));
  2484  001E3C  0406               	decf	LCDGoto@row^0,w,c
  2485  001E3E  B4D8               	btfsc	status,2,c
  2486  001E40  EF24  F00F         	goto	u841
  2487  001E44  EF26  F00F         	goto	u840
  2488  001E48                     u841:
  2489  001E48  EF30  F00F         	goto	l1435
  2490  001E4C                     u840:
  2491  001E4C  0E80               	movlw	128
  2492  001E4E  C00B  F007         	movff	LCDGoto@column,??_LCDGoto
  2493  001E52  6A08               	clrf	(??_LCDGoto+1)^0,c
  2494  001E54  1007               	iorwf	??_LCDGoto^0,w,c
  2495  001E56  6E09               	movwf	_LCDGoto$230^0,c
  2496  001E58  5008               	movf	(??_LCDGoto+1)^0,w,c
  2497  001E5A  6E0A               	movwf	(_LCDGoto$230+1)^0,c
  2498  001E5C  EF38  F00F         	goto	l1437
  2499  001E60                     l1435:
  2500  001E60  0EC0               	movlw	192
  2501  001E62  C00B  F007         	movff	LCDGoto@column,??_LCDGoto
  2502  001E66  6A08               	clrf	(??_LCDGoto+1)^0,c
  2503  001E68  1007               	iorwf	??_LCDGoto^0,w,c
  2504  001E6A  6E09               	movwf	_LCDGoto$230^0,c
  2505  001E6C  5008               	movf	(??_LCDGoto+1)^0,w,c
  2506  001E6E  6E0A               	movwf	(_LCDGoto$230+1)^0,c
  2507  001E70                     l1437:
  2508  001E70  C009  F004         	movff	_LCDGoto$230,WriteByte@data
  2509  001E74  0E01               	movlw	1
  2510  001E76  ECBE  F00F         	call	_WriteByte
  2511  001E7A                     
  2512                           ;lcd.c: 147:     WaitLCD();
  2513  001E7A  ECB0  F00F         	call	_WaitLCD	;wreg free
  2514  001E7E                     l70:
  2515  001E7E  0012               	return		;funcret
  2516  001E80                     __end_of_LCDGoto:
  2517                           	callstack 0
  2518                           
  2519 ;; *************** function _WriteByte *****************
  2520 ;; Defined at:
  2521 ;;		line 88 in file "lcd.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;  cmd             1    wreg     unsigned char 
  2524 ;;  data            1    3[COMRAM] unsigned char 
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;  cmd             1    4[COMRAM] unsigned char 
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  1    wreg      void 
  2529 ;; Registers used:
  2530 ;;		wreg, status,2, status,0, cstack
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2536 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2537 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2539 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2540 ;;Total ram usage:        2 bytes
  2541 ;; Hardware stack levels used:    1
  2542 ;; Hardware stack levels required when called:    1
  2543 ;; This function calls:
  2544 ;;		_WriteNibble
  2545 ;; This function is called by:
  2546 ;;		_LCDGoto
  2547 ;;		_LCDPutChar
  2548 ;;		_LCDClear
  2549 ;;		_LCDShiftDisplay
  2550 ;; This function uses a non-reentrant model
  2551 ;;
  2552                           
  2553                           	psect	text11
  2554  001F7C                     __ptext11:
  2555                           	callstack 0
  2556  001F7C                     _WriteByte:
  2557                           	callstack 27
  2558                           
  2559                           ;incstack = 0
  2560                           ;WriteByte@cmd stored from wreg
  2561  001F7C  6E05               	movwf	WriteByte@cmd^0,c
  2562  001F7E                     
  2563                           ;lcd.c: 88: void WriteByte(UINT8_T cmd, UINT8_T data);lcd.c: 89: {;lcd.c: 90:     WriteN
      +                          ibble(cmd, data >> 4);
  2564  001F7E  3804               	swapf	WriteByte@data^0,w,c
  2565  001F80  0B0F               	andlw	15
  2566  001F82  6E01               	movwf	WriteNibble@data^0,c
  2567  001F84  5005               	movf	WriteByte@cmd^0,w,c
  2568  001F86  EC72  F00F         	call	_WriteNibble
  2569                           
  2570                           ;lcd.c: 91:     WriteNibble(cmd, data);
  2571  001F8A  C004  F001         	movff	WriteByte@data,WriteNibble@data
  2572  001F8E  5005               	movf	WriteByte@cmd^0,w,c
  2573  001F90  EC72  F00F         	call	_WriteNibble
  2574  001F94  0012               	return		;funcret
  2575  001F96                     __end_of_WriteByte:
  2576                           	callstack 0
  2577                           
  2578 ;; *************** function _LCDInit *****************
  2579 ;; Defined at:
  2580 ;;		line 94 in file "lcd.c"
  2581 ;; Parameters:    Size  Location     Type
  2582 ;;		None
  2583 ;; Auto vars:     Size  Location     Type
  2584 ;;		None
  2585 ;; Return value:  Size  Location     Type
  2586 ;;                  1    wreg      void 
  2587 ;; Registers used:
  2588 ;;		wreg, status,2, status,0, cstack
  2589 ;; Tracked objects:
  2590 ;;		On entry : 0/0
  2591 ;;		On exit  : 0/0
  2592 ;;		Unchanged: 0/0
  2593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2596 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2597 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2598 ;;Total ram usage:        1 bytes
  2599 ;; Hardware stack levels used:    1
  2600 ;; Hardware stack levels required when called:    2
  2601 ;; This function calls:
  2602 ;;		_WaitLCD
  2603 ;;		_WriteNibble
  2604 ;; This function is called by:
  2605 ;;		_main
  2606 ;; This function uses a non-reentrant model
  2607 ;;
  2608                           
  2609                           	psect	text12
  2610  001A9E                     __ptext12:
  2611                           	callstack 0
  2612  001A9E                     _LCDInit:
  2613                           	callstack 28
  2614  001A9E                     
  2615                           ;lcd.c: 96:     TRISDbits.TRISD7 = 0;
  2616  001A9E  9E95               	bcf	149,7,c	;volatile
  2617                           
  2618                           ;lcd.c: 97:     TRISDbits.TRISD6 = 0;
  2619  001AA0  9C95               	bcf	149,6,c	;volatile
  2620                           
  2621                           ;lcd.c: 98:     TRISDbits.TRISD5 = 0;
  2622  001AA2  9A95               	bcf	149,5,c	;volatile
  2623                           
  2624                           ;lcd.c: 99:     TRISDbits.TRISD4 = 0;
  2625  001AA4  9895               	bcf	149,4,c	;volatile
  2626                           
  2627                           ;lcd.c: 100:     TRISDbits.TRISD0 = 0;
  2628  001AA6  9095               	bcf	149,0,c	;volatile
  2629                           
  2630                           ;lcd.c: 101:     TRISDbits.TRISD1 = 0;
  2631  001AA8  9295               	bcf	149,1,c	;volatile
  2632                           
  2633                           ;lcd.c: 102:     TRISDbits.TRISD2 = 0;
  2634  001AAA  9495               	bcf	149,2,c	;volatile
  2635                           
  2636                           ;lcd.c: 103:     TRISDbits.TRISD3 = 0;
  2637  001AAC  9695               	bcf	149,3,c	;volatile
  2638                           
  2639                           ;lcd.c: 105:     LATDbits.LATD7 = 1;
  2640  001AAE  8E8C               	bsf	140,7,c	;volatile
  2641  001AB0                     
  2642                           ;lcd.c: 106:     _delay(30000);
  2643  001AB0  0E27               	movlw	39
  2644  001AB2  6E04               	movwf	??_LCDInit^0,c
  2645  001AB4  0EF5               	movlw	245
  2646  001AB6                     u1517:
  2647  001AB6  2EE8               	decfsz	wreg,f,c
  2648  001AB8  D7FE               	bra	u1517
  2649  001ABA  2E04               	decfsz	??_LCDInit^0,f,c
  2650  001ABC  D7FC               	bra	u1517
  2651  001ABE  F000               	nop	
  2652  001AC0                     
  2653                           ;lcd.c: 107:     WriteNibble(1, 0x03);
  2654  001AC0  0E03               	movlw	3
  2655  001AC2  6E01               	movwf	WriteNibble@data^0,c
  2656  001AC4  0E01               	movlw	1
  2657  001AC6  EC72  F00F         	call	_WriteNibble
  2658  001ACA                     
  2659                           ;lcd.c: 108:     _delay(3000);
  2660  001ACA  0E04               	movlw	4
  2661  001ACC  6E04               	movwf	??_LCDInit^0,c
  2662  001ACE  0EE4               	movlw	228
  2663  001AD0                     u1527:
  2664  001AD0  2EE8               	decfsz	wreg,f,c
  2665  001AD2  D7FE               	bra	u1527
  2666  001AD4  2E04               	decfsz	??_LCDInit^0,f,c
  2667  001AD6  D7FC               	bra	u1527
  2668  001AD8  D000               	nop2	
  2669                           
  2670                           ;lcd.c: 109:     WriteNibble(1, 0x03);
  2671  001ADA  0E03               	movlw	3
  2672  001ADC  6E01               	movwf	WriteNibble@data^0,c
  2673  001ADE  0E01               	movlw	1
  2674  001AE0  EC72  F00F         	call	_WriteNibble
  2675  001AE4                     
  2676                           ;lcd.c: 110:     _delay(100);
  2677  001AE4  0E21               	movlw	33
  2678  001AE6                     u1537:
  2679  001AE6  2EE8               	decfsz	wreg,f,c
  2680  001AE8  D7FE               	bra	u1537
  2681  001AEA  F000               	nop	
  2682  001AEC                     
  2683                           ;lcd.c: 111:     WriteNibble(1, 0x03);
  2684  001AEC  0E03               	movlw	3
  2685  001AEE  6E01               	movwf	WriteNibble@data^0,c
  2686  001AF0  0E01               	movlw	1
  2687  001AF2  EC72  F00F         	call	_WriteNibble
  2688                           
  2689                           ;lcd.c: 112:     _delay(100);
  2690  001AF6  0E21               	movlw	33
  2691  001AF8                     u1547:
  2692  001AF8  2EE8               	decfsz	wreg,f,c
  2693  001AFA  D7FE               	bra	u1547
  2694  001AFC  F000               	nop	
  2695  001AFE                     
  2696                           ;lcd.c: 113:     WriteNibble(1, 0b00000010);
  2697  001AFE  0E02               	movlw	2
  2698  001B00  6E01               	movwf	WriteNibble@data^0,c
  2699  001B02  0E01               	movlw	1
  2700  001B04  EC72  F00F         	call	_WriteNibble
  2701  001B08                     
  2702                           ;lcd.c: 114:     WaitLCD();
  2703  001B08  ECB0  F00F         	call	_WaitLCD	;wreg free
  2704  001B0C                     
  2705                           ;lcd.c: 115:     WriteNibble(1, 0b00000010);
  2706  001B0C  0E02               	movlw	2
  2707  001B0E  6E01               	movwf	WriteNibble@data^0,c
  2708  001B10  0E01               	movlw	1
  2709  001B12  EC72  F00F         	call	_WriteNibble
  2710  001B16                     
  2711                           ;lcd.c: 116:     WriteNibble(1, 0b00001000);
  2712  001B16  0E08               	movlw	8
  2713  001B18  6E01               	movwf	WriteNibble@data^0,c
  2714  001B1A  0E01               	movlw	1
  2715  001B1C  EC72  F00F         	call	_WriteNibble
  2716  001B20                     
  2717                           ;lcd.c: 117:     WaitLCD();
  2718  001B20  ECB0  F00F         	call	_WaitLCD	;wreg free
  2719  001B24                     
  2720                           ;lcd.c: 118:     WriteNibble(1, 0b00000000);
  2721  001B24  0E00               	movlw	0
  2722  001B26  6E01               	movwf	WriteNibble@data^0,c
  2723  001B28  0E01               	movlw	1
  2724  001B2A  EC72  F00F         	call	_WriteNibble
  2725  001B2E                     
  2726                           ;lcd.c: 119:     WriteNibble(1, 0b00001000);
  2727  001B2E  0E08               	movlw	8
  2728  001B30  6E01               	movwf	WriteNibble@data^0,c
  2729  001B32  0E01               	movlw	1
  2730  001B34  EC72  F00F         	call	_WriteNibble
  2731  001B38                     
  2732                           ;lcd.c: 120:     WaitLCD();
  2733  001B38  ECB0  F00F         	call	_WaitLCD	;wreg free
  2734  001B3C                     
  2735                           ;lcd.c: 121:     WriteNibble(1, 0b00000000);
  2736  001B3C  0E00               	movlw	0
  2737  001B3E  6E01               	movwf	WriteNibble@data^0,c
  2738  001B40  0E01               	movlw	1
  2739  001B42  EC72  F00F         	call	_WriteNibble
  2740  001B46                     
  2741                           ;lcd.c: 122:     WriteNibble(1, 0b00001100);
  2742  001B46  0E0C               	movlw	12
  2743  001B48  6E01               	movwf	WriteNibble@data^0,c
  2744  001B4A  0E01               	movlw	1
  2745  001B4C  EC72  F00F         	call	_WriteNibble
  2746  001B50                     
  2747                           ;lcd.c: 125:     WaitLCD();
  2748  001B50  ECB0  F00F         	call	_WaitLCD	;wreg free
  2749  001B54                     
  2750                           ;lcd.c: 126:     WriteNibble(1, 0b00000000);
  2751  001B54  0E00               	movlw	0
  2752  001B56  6E01               	movwf	WriteNibble@data^0,c
  2753  001B58  0E01               	movlw	1
  2754  001B5A  EC72  F00F         	call	_WriteNibble
  2755  001B5E                     
  2756                           ;lcd.c: 127:     WriteNibble(1, 0b00000001);
  2757  001B5E  0E01               	movlw	1
  2758  001B60  6E01               	movwf	WriteNibble@data^0,c
  2759  001B62  0E01               	movlw	1
  2760  001B64  EC72  F00F         	call	_WriteNibble
  2761  001B68                     
  2762                           ;lcd.c: 128:     WaitLCD();
  2763  001B68  ECB0  F00F         	call	_WaitLCD	;wreg free
  2764  001B6C                     
  2765                           ;lcd.c: 129:     WriteNibble(1, 0b00000000);
  2766  001B6C  0E00               	movlw	0
  2767  001B6E  6E01               	movwf	WriteNibble@data^0,c
  2768  001B70  0E01               	movlw	1
  2769  001B72  EC72  F00F         	call	_WriteNibble
  2770  001B76                     
  2771                           ;lcd.c: 130:     WriteNibble(1, 0b00000110);
  2772  001B76  0E06               	movlw	6
  2773  001B78  6E01               	movwf	WriteNibble@data^0,c
  2774  001B7A  0E01               	movlw	1
  2775  001B7C  EC72  F00F         	call	_WriteNibble
  2776  001B80                     
  2777                           ;lcd.c: 131:     WaitLCD();
  2778  001B80  ECB0  F00F         	call	_WaitLCD	;wreg free
  2779  001B84  0012               	return		;funcret
  2780  001B86                     __end_of_LCDInit:
  2781                           	callstack 0
  2782                           
  2783 ;; *************** function _WriteNibble *****************
  2784 ;; Defined at:
  2785 ;;		line 71 in file "lcd.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;  cmd             1    wreg     unsigned char 
  2788 ;;  data            1    0[COMRAM] unsigned char 
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;  cmd             1    2[COMRAM] unsigned char 
  2791 ;; Return value:  Size  Location     Type
  2792 ;;                  1    wreg      void 
  2793 ;; Registers used:
  2794 ;;		wreg, status,2, status,0
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2800 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2801 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2802 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2803 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2804 ;;Total ram usage:        3 bytes
  2805 ;; Hardware stack levels used:    1
  2806 ;; This function calls:
  2807 ;;		Nothing
  2808 ;; This function is called by:
  2809 ;;		_WriteByte
  2810 ;;		_LCDInit
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           	psect	text13
  2815  001EE4                     __ptext13:
  2816                           	callstack 0
  2817  001EE4                     _WriteNibble:
  2818                           	callstack 27
  2819                           
  2820                           ;incstack = 0
  2821                           ;WriteNibble@cmd stored from wreg
  2822  001EE4  6E03               	movwf	WriteNibble@cmd^0,c
  2823  001EE6                     
  2824                           ;lcd.c: 71: void WriteNibble(UINT8_T cmd, UINT8_T data);lcd.c: 72: {;lcd.c: 73:     LATD
      +                          bits.LATD4 = (cmd ? 0 : 1);
  2825  001EE6  5003               	movf	WriteNibble@cmd^0,w,c
  2826  001EE8  B4D8               	btfsc	status,2,c
  2827  001EEA  EF79  F00F         	goto	u761
  2828  001EEE  EF7D  F00F         	goto	u760
  2829  001EF2                     u761:
  2830  001EF2  6A02               	clrf	??_WriteNibble^0,c
  2831  001EF4  2A02               	incf	??_WriteNibble^0,f,c
  2832  001EF6  EF7E  F00F         	goto	u778
  2833  001EFA                     u760:
  2834  001EFA  6A02               	clrf	??_WriteNibble^0,c
  2835  001EFC                     u778:
  2836  001EFC  3A02               	swapf	??_WriteNibble^0,f,c
  2837  001EFE  508C               	movf	140,w,c	;volatile
  2838  001F00  1802               	xorwf	??_WriteNibble^0,w,c
  2839  001F02  0BEF               	andlw	-17
  2840  001F04  1802               	xorwf	??_WriteNibble^0,w,c
  2841  001F06  6E8C               	movwf	140,c	;volatile
  2842  001F08                     
  2843                           ;lcd.c: 74:     LATDbits.LATD5 = 0;
  2844  001F08  9A8C               	bcf	140,5,c	;volatile
  2845  001F0A                     
  2846                           ;lcd.c: 75:     LATDbits.LATD6 = 1;
  2847  001F0A  8C8C               	bsf	140,6,c	;volatile
  2848  001F0C                     
  2849                           ;lcd.c: 77:     LATDbits.LATD0 = LATDbits.LATD1 = LATDbits.LATD2 = LATDbits.LATD3 = 0;
  2850  001F0C  968C               	bcf	140,3,c	;volatile
  2851  001F0E  948C               	bcf	140,2,c	;volatile
  2852  001F10  928C               	bcf	140,1,c	;volatile
  2853  001F12  908C               	bcf	140,0,c	;volatile
  2854  001F14                     
  2855                           ;lcd.c: 78:     __nop();
  2856  001F14  F000               	nop	
  2857  001F16                     
  2858                           ;lcd.c: 79:     __nop();
  2859  001F16  F000               	nop	
  2860                           
  2861                           ;lcd.c: 81:     LATD = (LATD & 0xF0) | (data & 0x0F);
  2862  001F18  C001  F002         	movff	WriteNibble@data,??_WriteNibble
  2863  001F1C  0E0F               	movlw	15
  2864  001F1E  1602               	andwf	??_WriteNibble^0,f,c
  2865  001F20  508C               	movf	140,w,c	;volatile
  2866  001F22  0BF0               	andlw	240
  2867  001F24  1002               	iorwf	??_WriteNibble^0,w,c
  2868  001F26  6E8C               	movwf	140,c	;volatile
  2869  001F28                     
  2870                           ;lcd.c: 82:     __nop();
  2871  001F28  F000               	nop	
  2872  001F2A                     
  2873                           ;lcd.c: 83:     __nop();
  2874  001F2A  F000               	nop	
  2875  001F2C                     
  2876                           ;lcd.c: 85:     LATDbits.LATD6 = 0;
  2877  001F2C  9C8C               	bcf	140,6,c	;volatile
  2878  001F2E  0012               	return		;funcret
  2879  001F30                     __end_of_WriteNibble:
  2880                           	callstack 0
  2881                           
  2882 ;; *************** function _WaitLCD *****************
  2883 ;; Defined at:
  2884 ;;		line 57 in file "lcd.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;		None
  2887 ;; Auto vars:     Size  Location     Type
  2888 ;;  status          1    1[COMRAM] unsigned char 
  2889 ;; Return value:  Size  Location     Type
  2890 ;;                  1    wreg      void 
  2891 ;; Registers used:
  2892 ;;		wreg, status,2, status,0, cstack
  2893 ;; Tracked objects:
  2894 ;;		On entry : 0/0
  2895 ;;		On exit  : 0/0
  2896 ;;		Unchanged: 0/0
  2897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2899 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2901 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2902 ;;Total ram usage:        1 bytes
  2903 ;; Hardware stack levels used:    1
  2904 ;; Hardware stack levels required when called:    1
  2905 ;; This function calls:
  2906 ;;		_ReadByte
  2907 ;; This function is called by:
  2908 ;;		_LCDInit
  2909 ;;		_LCDGoto
  2910 ;;		_LCDPutChar
  2911 ;;		_LCDClear
  2912 ;; This function uses a non-reentrant model
  2913 ;;
  2914                           
  2915                           	psect	text14
  2916  001F60                     __ptext14:
  2917                           	callstack 0
  2918  001F60                     _WaitLCD:
  2919                           	callstack 27
  2920  001F60                     
  2921                           ;lcd.c: 59:     UINT8_T status;;lcd.c: 61:     LATDbits.LATD4 = 0;
  2922  001F60  988C               	bcf	140,4,c	;volatile
  2923                           
  2924                           ;lcd.c: 62:     LATDbits.LATD5 = 1;
  2925  001F62  8A8C               	bsf	140,5,c	;volatile
  2926  001F64                     l1411:
  2927                           
  2928                           ;lcd.c: 65:         status = ReadByte();
  2929  001F64  EC98  F00F         	call	_ReadByte	;wreg free
  2930  001F68  6E02               	movwf	WaitLCD@status^0,c
  2931  001F6A                     
  2932                           ;lcd.c: 66:     } while (status & 0x80);
  2933  001F6A  BE02               	btfsc	WaitLCD@status^0,7,c
  2934  001F6C  EFBA  F00F         	goto	u781
  2935  001F70  EFBC  F00F         	goto	u780
  2936  001F74                     u781:
  2937  001F74  EFB2  F00F         	goto	l1411
  2938  001F78                     u780:
  2939  001F78                     
  2940                           ;lcd.c: 68:     LATDbits.LATD5 = 0;
  2941  001F78  9A8C               	bcf	140,5,c	;volatile
  2942  001F7A  0012               	return		;funcret
  2943  001F7C                     __end_of_WaitLCD:
  2944                           	callstack 0
  2945                           
  2946 ;; *************** function _ReadByte *****************
  2947 ;; Defined at:
  2948 ;;		line 26 in file "lcd.c"
  2949 ;; Parameters:    Size  Location     Type
  2950 ;;		None
  2951 ;; Auto vars:     Size  Location     Type
  2952 ;;  status          1    0[COMRAM] unsigned char 
  2953 ;; Return value:  Size  Location     Type
  2954 ;;                  1    wreg      unsigned char 
  2955 ;; Registers used:
  2956 ;;		wreg, status,2, status,0
  2957 ;; Tracked objects:
  2958 ;;		On entry : 0/0
  2959 ;;		On exit  : 0/0
  2960 ;;		Unchanged: 0/0
  2961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2963 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2965 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2966 ;;Total ram usage:        1 bytes
  2967 ;; Hardware stack levels used:    1
  2968 ;; This function calls:
  2969 ;;		Nothing
  2970 ;; This function is called by:
  2971 ;;		_WaitLCD
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           	psect	text15
  2976  001F30                     __ptext15:
  2977                           	callstack 0
  2978  001F30                     _ReadByte:
  2979                           	callstack 27
  2980  001F30                     
  2981                           ;lcd.c: 28:     UINT8_T status;;lcd.c: 30:     TRISDbits.TRISD0 = 1;
  2982  001F30  8095               	bsf	149,0,c	;volatile
  2983                           
  2984                           ;lcd.c: 31:     TRISDbits.TRISD1 = 1;
  2985  001F32  8295               	bsf	149,1,c	;volatile
  2986                           
  2987                           ;lcd.c: 32:     TRISDbits.TRISD2 = 1;
  2988  001F34  8495               	bsf	149,2,c	;volatile
  2989                           
  2990                           ;lcd.c: 33:     TRISDbits.TRISD3 = 1;
  2991  001F36  8695               	bsf	149,3,c	;volatile
  2992                           
  2993                           ;lcd.c: 35:     LATDbits.LATD6 = 1;
  2994  001F38  8C8C               	bsf	140,6,c	;volatile
  2995                           
  2996                           ;lcd.c: 36:     __nop();
  2997  001F3A  F000               	nop	
  2998                           
  2999                           ;lcd.c: 37:     __nop();
  3000  001F3C  F000               	nop	
  3001  001F3E                     
  3002                           ;lcd.c: 39:     status = PORTD << 4;
  3003  001F3E  3883               	swapf	131,w,c	;volatile
  3004  001F40  0BF0               	andlw	240
  3005  001F42  6E01               	movwf	ReadByte@status^0,c
  3006  001F44                     
  3007                           ;lcd.c: 40:     LATDbits.LATD6 = 0;
  3008  001F44  9C8C               	bcf	140,6,c	;volatile
  3009  001F46                     
  3010                           ;lcd.c: 42:     LATDbits.LATD6 = 1;
  3011  001F46  8C8C               	bsf	140,6,c	;volatile
  3012  001F48                     
  3013                           ;lcd.c: 43:     __nop();
  3014  001F48  F000               	nop	
  3015  001F4A                     
  3016                           ;lcd.c: 44:     __nop();
  3017  001F4A  F000               	nop	
  3018                           
  3019                           ;lcd.c: 46:     status |= PORTD & 0x0F;
  3020  001F4C  5083               	movf	131,w,c	;volatile
  3021  001F4E  0B0F               	andlw	15
  3022  001F50  1201               	iorwf	ReadByte@status^0,f,c
  3023  001F52                     
  3024                           ;lcd.c: 47:     LATDbits.LATD6 = 0;
  3025  001F52  9C8C               	bcf	140,6,c	;volatile
  3026  001F54                     
  3027                           ;lcd.c: 49:     TRISDbits.TRISD0 = 0;
  3028  001F54  9095               	bcf	149,0,c	;volatile
  3029  001F56                     
  3030                           ;lcd.c: 50:     TRISDbits.TRISD1 = 0;
  3031  001F56  9295               	bcf	149,1,c	;volatile
  3032  001F58                     
  3033                           ;lcd.c: 51:     TRISDbits.TRISD2 = 0;
  3034  001F58  9495               	bcf	149,2,c	;volatile
  3035  001F5A                     
  3036                           ;lcd.c: 52:     TRISDbits.TRISD3 = 0;
  3037  001F5A  9695               	bcf	149,3,c	;volatile
  3038  001F5C                     
  3039                           ;lcd.c: 54:     return(status);
  3040  001F5C  5001               	movf	ReadByte@status^0,w,c
  3041  001F5E  0012               	return		;funcret
  3042  001F60                     __end_of_ReadByte:
  3043                           	callstack 0
  3044                           
  3045                           	psect	rparam
  3046  0000                     
  3047                           	psect	idloc
  3048                           
  3049                           ;Config register IDLOC0 @ 0x200000
  3050                           ;	unspecified, using default values
  3051  200000                     	org	2097152
  3052  200000  FF                 	db	255
  3053                           
  3054                           ;Config register IDLOC1 @ 0x200001
  3055                           ;	unspecified, using default values
  3056  200001                     	org	2097153
  3057  200001  FF                 	db	255
  3058                           
  3059                           ;Config register IDLOC2 @ 0x200002
  3060                           ;	unspecified, using default values
  3061  200002                     	org	2097154
  3062  200002  FF                 	db	255
  3063                           
  3064                           ;Config register IDLOC3 @ 0x200003
  3065                           ;	unspecified, using default values
  3066  200003                     	org	2097155
  3067  200003  FF                 	db	255
  3068                           
  3069                           ;Config register IDLOC4 @ 0x200004
  3070                           ;	unspecified, using default values
  3071  200004                     	org	2097156
  3072  200004  FF                 	db	255
  3073                           
  3074                           ;Config register IDLOC5 @ 0x200005
  3075                           ;	unspecified, using default values
  3076  200005                     	org	2097157
  3077  200005  FF                 	db	255
  3078                           
  3079                           ;Config register IDLOC6 @ 0x200006
  3080                           ;	unspecified, using default values
  3081  200006                     	org	2097158
  3082  200006  FF                 	db	255
  3083                           
  3084                           ;Config register IDLOC7 @ 0x200007
  3085                           ;	unspecified, using default values
  3086  200007                     	org	2097159
  3087  200007  FF                 	db	255
  3088                           
  3089                           	psect	config
  3090                           
  3091                           ; Padding undefined space
  3092  300000                     	org	3145728
  3093  300000  FF                 	db	255
  3094                           
  3095                           ;Config register CONFIG1H @ 0x300001
  3096                           ;	Oscillator Selection bits
  3097                           ;	FOSC = INTIO7, Internal oscillator block, CLKOUT function on OSC2
  3098                           ;	4X PLL Enable
  3099                           ;	PLLCFG = OFF, Oscillator used directly
  3100                           ;	Primary clock enable bit
  3101                           ;	PRICLKEN = ON, Primary clock is always enabled
  3102                           ;	Fail-Safe Clock Monitor Enable bit
  3103                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3104                           ;	Internal/External Oscillator Switchover bit
  3105                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3106  300001                     	org	3145729
  3107  300001  29                 	db	41
  3108                           
  3109                           ;Config register CONFIG2L @ 0x300002
  3110                           ;	Power-up Timer Enable bit
  3111                           ;	PWRTEN = OFF, Power up timer disabled
  3112                           ;	Brown-out Reset Enable bits
  3113                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  3114                           ;	Brown Out Reset Voltage bits
  3115                           ;	BORV = 190, VBOR set to 1.90 V nominal
  3116  300002                     	org	3145730
  3117  300002  1F                 	db	31
  3118                           
  3119                           ;Config register CONFIG2H @ 0x300003
  3120                           ;	Watchdog Timer Enable bits
  3121                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  3122                           ;	Watchdog Timer Postscale Select bits
  3123                           ;	WDTPS = 32768, 1:32768
  3124  300003                     	org	3145731
  3125  300003  3C                 	db	60
  3126                           
  3127                           ; Padding undefined space
  3128  300004                     	org	3145732
  3129  300004  FF                 	db	255
  3130                           
  3131                           ;Config register CONFIG3H @ 0x300005
  3132                           ;	CCP2 MUX bit
  3133                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  3134                           ;	PORTB A/D Enable bit
  3135                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  3136                           ;	P3A/CCP3 Mux bit
  3137                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  3138                           ;	HFINTOSC Fast Start-up
  3139                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  3140                           ;	Timer3 Clock input mux bit
  3141                           ;	T3CMX = PORTC0, T3CKI is on RC0
  3142                           ;	ECCP2 B output mux bit
  3143                           ;	P2BMX = PORTD2, P2B is on RD2
  3144                           ;	MCLR Pin Enable bit
  3145                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  3146  300005                     	org	3145733
  3147  300005  BF                 	db	191
  3148                           
  3149                           ;Config register CONFIG4L @ 0x300006
  3150                           ;	Stack Full/Underflow Reset Enable bit
  3151                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3152                           ;	Single-Supply ICSP Enable bit
  3153                           ;	LVP = OFF, Single-Supply ICSP disabled
  3154                           ;	Extended Instruction Set Enable bit
  3155                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3156                           ;	Background Debug
  3157                           ;	DEBUG = 0x1, unprogrammed default
  3158  300006                     	org	3145734
  3159  300006  81                 	db	129
  3160                           
  3161                           ; Padding undefined space
  3162  300007                     	org	3145735
  3163  300007  FF                 	db	255
  3164                           
  3165                           ;Config register CONFIG5L @ 0x300008
  3166                           ;	Code Protection Block 0
  3167                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3168                           ;	Code Protection Block 1
  3169                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3170                           ;	Code Protection Block 2
  3171                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3172                           ;	Code Protection Block 3
  3173                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3174  300008                     	org	3145736
  3175  300008  0F                 	db	15
  3176                           
  3177                           ;Config register CONFIG5H @ 0x300009
  3178                           ;	Boot Block Code Protection bit
  3179                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3180                           ;	Data EEPROM Code Protection bit
  3181                           ;	CPD = OFF, Data EEPROM not code-protected
  3182  300009                     	org	3145737
  3183  300009  C0                 	db	192
  3184                           
  3185                           ;Config register CONFIG6L @ 0x30000A
  3186                           ;	Write Protection Block 0
  3187                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3188                           ;	Write Protection Block 1
  3189                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3190                           ;	Write Protection Block 2
  3191                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3192                           ;	Write Protection Block 3
  3193                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3194  30000A                     	org	3145738
  3195  30000A  0F                 	db	15
  3196                           
  3197                           ;Config register CONFIG6H @ 0x30000B
  3198                           ;	Configuration Register Write Protection bit
  3199                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3200                           ;	Boot Block Write Protection bit
  3201                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3202                           ;	Data EEPROM Write Protection bit
  3203                           ;	WRTD = OFF, Data EEPROM not write-protected
  3204  30000B                     	org	3145739
  3205  30000B  E0                 	db	224
  3206                           
  3207                           ;Config register CONFIG7L @ 0x30000C
  3208                           ;	Table Read Protection Block 0
  3209                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3210                           ;	Table Read Protection Block 1
  3211                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3212                           ;	Table Read Protection Block 2
  3213                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3214                           ;	Table Read Protection Block 3
  3215                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3216  30000C                     	org	3145740
  3217  30000C  0F                 	db	15
  3218                           
  3219                           ;Config register CONFIG7H @ 0x30000D
  3220                           ;	Boot Block Table Read Protection bit
  3221                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3222  30000D                     	org	3145741
  3223  30000D  40                 	db	64
  3224                           tosu	equ	0xFFF
  3225                           tosh	equ	0xFFE
  3226                           tosl	equ	0xFFD
  3227                           stkptr	equ	0xFFC
  3228                           pclatu	equ	0xFFB
  3229                           pclath	equ	0xFFA
  3230                           pcl	equ	0xFF9
  3231                           tblptru	equ	0xFF8
  3232                           tblptrh	equ	0xFF7
  3233                           tblptrl	equ	0xFF6
  3234                           tablat	equ	0xFF5
  3235                           prodh	equ	0xFF4
  3236                           prodl	equ	0xFF3
  3237                           indf0	equ	0xFEF
  3238                           postinc0	equ	0xFEE
  3239                           postdec0	equ	0xFED
  3240                           preinc0	equ	0xFEC
  3241                           plusw0	equ	0xFEB
  3242                           fsr0h	equ	0xFEA
  3243                           fsr0l	equ	0xFE9
  3244                           wreg	equ	0xFE8
  3245                           indf1	equ	0xFE7
  3246                           postinc1	equ	0xFE6
  3247                           postdec1	equ	0xFE5
  3248                           preinc1	equ	0xFE4
  3249                           plusw1	equ	0xFE3
  3250                           fsr1h	equ	0xFE2
  3251                           fsr1l	equ	0xFE1
  3252                           bsr	equ	0xFE0
  3253                           indf2	equ	0xFDF
  3254                           postinc2	equ	0xFDE
  3255                           postdec2	equ	0xFDD
  3256                           preinc2	equ	0xFDC
  3257                           plusw2	equ	0xFDB
  3258                           fsr2h	equ	0xFDA
  3259                           fsr2l	equ	0xFD9
  3260                           status	equ	0xFD8

Data Sizes:
    Strings     30
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     92      92
    BANK0           160      4       4
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    LCDWriteStr@string	PTR const unsigned char  size(2) Largest target is 11
		 -> LCDWriteInt@string(COMRAM[3]), LCDWriteFloat@string(COMRAM[5]), LCDWriteHexa@string(COMRAM[3]), STR_2(CODE[2]), 
		 -> STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_LCDWriteFloat
    ___fldiv->___xxtofl
    _LCDWriteFloat->___lwmod
    ___lwmod->___fltol
    ___fltol->___flmul
    ___flmul->___fldiv
    _LCDWriteStr->_LCDPutChar
    _LCDPutChar->_WriteByte
    _LCDGoto->_WriteByte
    _WriteByte->_WriteNibble
    _LCDInit->_WriteNibble
    _WaitLCD->_ReadByte

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   15154
                                              0 BANK0      4     4      0
                            _LCDInit
                      _LCDWriteFloat
                        _LCDWriteStr
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1399
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCDWriteFloat                                       13     8      5    7940
                                             79 COMRAM    13     8      5
                            _LCDGoto
                        _LCDWriteStr
                            ___fldiv (ARG)
                            ___flmul
                            ___fltol
                            ___lwdiv
                            ___lwmod
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                             74 COMRAM     5     1      4
                            ___flmul (ARG)
                            ___fltol (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     305
                                             64 COMRAM    10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1896
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCDWriteStr                                          5     3      2    2191
                                              6 COMRAM     5     3      2
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (2) _LCDPutChar                                           1     1      0    1721
                                              5 COMRAM     1     1      0
                            _WaitLCD
                          _WriteByte
 ---------------------------------------------------------------------------------
 (2) _LCDGoto                                              6     5      1    2061
                                              5 COMRAM     6     5      1
                            _WaitLCD
                          _WriteByte
 ---------------------------------------------------------------------------------
 (3) _WriteByte                                            2     1      1    1652
                                              3 COMRAM     2     1      1
                        _WriteNibble
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              1     1      0    1307
                                              3 COMRAM     1     1      0
                            _WaitLCD
                        _WriteNibble
 ---------------------------------------------------------------------------------
 (4) _WriteNibble                                          3     2      1    1260
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (3) _WaitLCD                                              1     1      0      47
                                              1 COMRAM     1     1      0
                           _ReadByte
 ---------------------------------------------------------------------------------
 (4) _ReadByte                                             1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDInit
     _WaitLCD
       _ReadByte
     _WriteNibble
   _LCDWriteFloat
     _LCDGoto
       _WaitLCD
         _ReadByte
       _WriteByte
         _WriteNibble
     _LCDWriteStr
       _LCDPutChar
         _WaitLCD
           _ReadByte
         _WriteByte
           _WriteNibble
     ___fldiv (ARG)
       ___xxtofl (ARG)
     ___flmul (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fltol (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       ___lwdiv (ARG)
     ___xxtofl (ARG)
   _LCDWriteStr
     _LCDPutChar
       _WaitLCD
         _ReadByte
       _WriteByte
         _WriteNibble
   ___fldiv
     ___xxtofl (ARG)
   ___flmul
     ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     5C      5C       1       96.8%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4       4       5        2.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
ABS                  0      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BIGRAM             F37      0       0      37        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb  5 12:00:26 2021

           ___fldiv@aexp 0027             ___fldiv@bexp 0026             ___fldiv@sign 001F  
                     l51 1F78              ?_LCDPutChar 0001                       l52 1F7A  
                     l61 1B84                       l70 1E7E                       l47 1F5E  
                     l55 1F2E                       l58 1F94                       l92 1C5C  
                     l77 1FA6                       l86 1DA0     __size_of_WriteNibble 004C  
                    l401 1A9C                      l602 1E14                      l612 1EE2  
                    l700 16EE                      l605 1EDA                      l722 1448  
                    l725 12DA                      l718 10E4                      l735 140A  
                    l727 1352                      l728 1340                      l762 1996  
                    l595 1E0C                      l691 1606                      l773 192E  
                    l686 17E2                      l766 18D2                      l759 183A  
                    l688 1642                      l697 1688                      l699 1700  
                    u800 1D90                      u810 1DA0                      u811 1D9C  
                    u820 1E28                      u900 10BE                      u821 1E24  
                    u901 10BA                      u830 1E38                      u910 10F4  
                    u831 1E34                      u807 1D86                      u911 10F0  
                    u760 1EFA                      u840 1E4C                      u920 1104  
                    u761 1EF2                      u841 1E48                      u921 1100  
                    u930 127E                      u850 103A                      u851 1036  
                    u780 1F78                      u940 12D8                      u860 104C  
                    u781 1F74                      u941 12D4                      u861 1048  
                    u790 1D5C                      u950 12F8                      u870 105C  
                    u951 12F4                      u935 1274                      u871 1058  
                    u960 130A                      u880 109C                      u961 1306  
                    u881 1098                      u778 1EFC                      u970 1338  
                    u890 10AE                      u971 1334                      u891 10AA  
                    u980 134E                      u797 1D52                      u981 134A  
                    u990 1362                      u991 135E                      wreg 000FE8  
           ___flmul@aexp 0039             ___flmul@bexp 003A             ___flmul@sign 0034  
           ___flmul@temp 003F             ___flmul@prod 003B          __end_of_LCDInit 1B86  
        __end_of_LCDGoto 1E80             ?_LCDWriteStr 0007             ___fltol@exp1 004A  
                   l1401 1F16                     l1411 1F64                     l1403 1F28  
                   l1413 1F6A                     l1405 1F2A                     l1421 1D2E  
                   l1501 11AA                     l1407 1F2C                     l1415 1F7E  
                   l1431 1E3C                     l1423 1D60                     l1511 120C  
                   l1503 11B6                     l1409 1F60                     l1433 1E4C  
                   l1417 1F98                     l1425 1D62                     l1521 12A2  
                   l1513 1218                     l1505 11C6                     l1441 1020  
                   l1371 1F46                     l1435 1E60                     l1427 1E18  
                   l1419 1D26                     l1531 12F8                     l1523 12C0  
                   l1515 1234                     l1507 11E0                     l1451 105C  
                   l1443 102C                     l1611 1A8C                     l1603 1A50  
                   l1381 1F56                     l1373 1F48                     l1365 1F30  
                   l1437 1E70                     l1429 1E28                     l1541 1362  
                   l1533 12FC                     l1525 12CA                     l1517 125E  
                   l1509 11F0                     l1461 108E                     l1453 106C  
                   l1445 103A                     l1605 1A5C                     l1621 1DC4  
                   l1701 1BDC                     l1383 1F58                     l1375 1F4A  
                   l1367 1F3E                     l1391 1EE6                     l1439 1E7A  
                   l1551 13C4                     l1543 136E                     l1535 130A  
                   l1527 12D8                     l1519 1294                     l1471 10CE  
                   l1463 109C                     l1455 1072                     l1447 103C  
                   l1607 1A6C                     l1631 1DFE                     l1623 1DCC  
                   l1615 1DA2                     l1711 1C46                     l1703 1BF6  
                   l1385 1F5A                     l1377 1F52                     l1369 1F44  
                   l1393 1F08                     l1561 142C                     l1553 13D8  
                   l1545 137C                     l1537 1338                     l1529 12EA  
                   l1481 1118                     l1473 10D4                     l1465 109E  
                   l1457 1082                     l1449 104C                     l1609 1A7C  
                   l1633 1E00                     l1625 1DDA                     l1617 1DAA  
                   l1641 1E9A                     l1713 1C50                     l1705 1BFA  
                   l1801 1668                     l1721 1466                     l1387 1F5C  
                   l1379 1F54                     l1395 1F0A                     l1563 142E  
                   l1555 13F2                     l1547 13A6                     l1491 1168  
                   l1483 1124                     l1475 10F4                     l1467 10AE  
                   l1459 1088                     l1571 1998                     l1635 1E06  
                   l1627 1DE0                     l1619 1DBC                     l1651 1ED4  
                   l1643 1EA2                     l1707 1C28                     l1811 16A6  
                   l1803 166E                     l1723 1476                     l1731 14A0  
                   l1715 144A                     l1397 1F0C                     l1661 1AE4  
                   l1653 1A9E                     l1557 140E                     l1565 1434  
                   l1549 13AA                     l1493 1174                     l1485 112E  
                   l1477 1104                     l1469 10BE                     l1581 19EE  
                   l1573 19AE                     l1629 1DF6                     l1645 1EB0  
                   l1637 1E80                     l1709 1C42                     l1821 1710  
                   l1813 16AA                     l1805 1678                     l1741 14CC  
                   l1733 14B0                     l1725 1486                     l1717 1456  
                   l1901 1C62                     l1399 1F14                     l1671 1B16  
                   l1663 1AEC                     l1655 1AB0                     l1567 1438  
                   l1559 141E                     l1495 1180                     l1487 1144  
                   l1583 19FE                     l1647 1EC6                     l1639 1E92  
                   l1831 1772                     l1823 171C                     l1815 16B8  
                   l1807 1686                     l1743 14DC                     l1751 1506  
                   l1735 14B6                     l1727 1496                     l1719 1464  
                   l1911 1C8C                     l1903 1C76                     l1681 1B3C  
                   l1673 1B20                     l1665 1AFE                     l1657 1AC0  
                   l1497 118E                     l1489 1150                     l1593 1A28  
                   l1585 1A02                     l1577 19C2                     l1649 1ECE  
                   l1841 17D0                     l1833 1788                     l1825 172A  
                   l1817 16E6                     l1809 1698                     l1761 1548  
                   l1753 1516                     l1745 14EC                     l1737 14BC  
                   l1729 1498                     l1913 1C90                     l1905 1C78  
                   l1691 1B68                     l1683 1B46                     l1675 1B24  
                   l1667 1B08                     l1659 1ACA                     l1499 119A  
                   l1595 1A32                     l1587 1A10                     l1579 19EC  
                   l1843 17D6                     l1835 17A2                     l1827 1754  
                   l1755 152C                     l1747 14FC                     l1739 14CA  
                   l1915 1CF8                     l1907 1C7C                     l1693 1B6C  
                   l1685 1B50                     l1677 1B2E                     l1669 1B0C  
                   l1597 1A3C                     l1845 17D8                     l1837 17BE  
                   l1829 1758                     l1781 15CA                     l1773 1580  
                   l1757 153C                     l1765 155C                     l1749 14FE  
                   l1861 1860                     l1853 17E6                     l1917 1D12  
                   l1909 1C88                     l1695 1B76                     l1687 1B54  
                   l1679 1B38                     l1839 17C2                     l1791 1610  
                   l1783 15D2                     l1775 159A                     l1767 156C  
                   l1759 1544                     l1871 18BA                     l1855 17F6  
                   l1697 1B80                     l1689 1B5E                     l1793 162E  
                   l1785 15E2                     l1777 15AA                     l1769 156C  
                   l1881 191E                     l1873 18BC                     l1865 1874  
                   l1857 1804                     l1699 1B88                     l1795 1630  
                   l1787 15F6                     l1779 15BA                     l1891 1976  
                   l1883 193C                     l1875 18C8                     l1867 187C  
                   l1859 184A                     l1797 1640                     l1789 1604  
                   l1893 1984                     l1885 193E                     l1877 1904  
                   l1869 1888                     l1799 1652                     l1895 1986  
                   l1887 1942                     l1879 1910                     l1889 1966  
                   l1899 1C5E                     _ADFM 007E07                     STR_1 1012  
                   STR_2 101D                     STR_3 1001                     u1000 137C  
                   u1001 1378                     u1010 13C4                     u1011 13C0  
                   u1020 13F2                     u1100 1A7C                     u1021 13EE  
                   u1101 1A78                     u1030 142C                     u1110 1DBC  
                   u1031 1428                     u1111 1DB8                     u1040 19AE  
                   u1120 1DDA                     u1200 14CA                     u1041 19AA  
                   u1121 1DD6                     u1201 14C6                     u1050 19E2  
                   u1130 1DF6                     u1210 14DC                     u1131 1DF2  
                   u1211 14D8                     u1060 1A10                     u1140 1E92  
                   u1300 1686                     u1220 14EC                     u1061 1A0C  
                   u1141 1E8E                     u1301 1682                     u1221 14E8  
                   u1070 1A24                     u1150 1EB0                     u1310 16A6  
                   u1230 152C                     u1071 1A20                     u1055 19D8  
                   u1151 1EAC                     u1311 16A2                     u1231 1528  
                   u1080 1A4C                     u1160 1EC6                     u1320 16B8  
                   u1240 156C                     u1400 17F6                     u1081 1A48  
                   u1161 1EC2                     u1321 16B4                     u1241 1568  
                   u1401 17F2                     u1090 1A6C                     u1330 16E6  
                   u1250 15E2                     u1170 1464                     u1410 1804  
                   u1091 1A68                     u1331 16E2                     u1251 15DE  
                   u1171 1460                     u1411 1800                     u1340 16FC  
                   u1260 1604                     u1180 1476                     u1420 1860  
                   u1341 16F8                     u1261 1600                     u1181 1472  
                   u1421 185C                     u1350 1710                     u1270 162E  
                   u1190 1486                     u1430 18B6                     u1351 170C  
                   u1271 162A                     u1191 1482                     u1431 18B2  
                   u1360 172A                     u1280 1652                     u1440 1900  
                   _LATD 000F8C                     u1361 1726                     u1281 164E  
                   u1441 18FC                     u1370 1772                     u1290 1668  
                   u1450 191E                     u1371 176E                     u1291 1664  
                   u1451 191A                     u1380 17A2                     u1460 192E  
                   u1517 1AB6                     u1381 179E                     u1461 192A  
                   u1390 17D0                     u1470 193C                     u1527 1AD0  
                   u1391 17CC                     u1471 1938                     u1480 1976  
                   u1537 1AE6                     u1481 1972                     u1490 1984  
                   u1547 1AF8                     u1491 1980                     _main 1C5E  
                   fsr0h 000FEA                     indf0 000FEF                     fsr0l 000FE9  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
        ___fldiv@new_exp 0020             ___param_bank 000000          __end_of_WaitLCD 1F7C  
          ___fltol@sign1 0049                    ?_main 0001          __end_of___fldiv 17E4  
        __end_of___flmul 144A          __end_of___fltol 1A9E          __end_of___lwdiv 1E16  
        __end_of___lwmod 1EE4                    _PORTD 000F83                    _TRISA 000F92  
          _LCDWriteFloat 1B86                    tablat 000FF5      __size_of_LCDPutChar 0012  
                  status 000FD8            WaitLCD@status 0002          __initialization 1FA8  
           __end_of_main 1D26         __end_of_ReadByte 1F60                   ??_main 005D  
          __activetblptr 000002           ?_LCDWriteFloat 0050                ??_LCDInit 0004  
              ??_LCDGoto 0007                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 _ANSELA 000F38            LCDGoto@column 000B         __end_of___xxtofl 1998  
              ??_WaitLCD 0002                ??___fldiv 0017                ??___flmul 0030  
              ??___fltol 0045                ??___lwdiv 0005                ??___lwmod 004F  
           __mediumconst 0000                   tblptrh 000FF7             LCDWriteStr@i 000B  
                 tblptrl 000FF6                   tblptru 000FF8             ___xxtofl@arg 000B  
           ___xxtofl@exp 000A             ___xxtofl@val 0001     __size_of_LCDWriteStr 007C  
             __accesstop 0060  __end_of__initialization 1FA8       __size_of_WriteByte 001A  
          ___rparam_used 000001               ___fltol@f1 0041           __pcstackCOMRAM 0001  
         WriteNibble@cmd 0003             ??_LCDPutChar 0006          ??_LCDWriteFloat 0055  
           WriteByte@cmd 0005                ?_ReadByte 0001       __end_of_LCDPutChar 1FA8  
    LCDWriteFloat@column 0055      LCDWriteFloat@string 0056            ??_WriteNibble 0002  
      __end_of_WriteByte 1F96                  _LCDInit 1A9E                  _LCDGoto 1E16  
              ?___xxtofl 0001               ??_ReadByte 0001                  __Hparam 0000  
                _WaitLCD 1F60                  __Lparam 0000                  ___fldiv 144A  
                ___flmul 1020                  ___fltol 1998                  ___lwdiv 1DA2  
                ___lwmod 1E80             __psmallconst 1000                  __pcinit 1FA8  
                __ramtop 1000                  __ptext0 1C5E                  __ptext1 17E4  
                __ptext2 144A                  __ptext3 1B86                  __ptext4 1E80  
                __ptext5 1DA2                  __ptext6 1998                  __ptext7 1020  
                __ptext8 1D26                  __ptext9 1F96               ??___xxtofl 0005  
    __end_of_WriteNibble 1F30     end_of_initialization 1FA8            __Lmediumconst 0000  
      LCDWriteStr@string 0007            ___xxtofl@sign 0009                _TRISAbits 000F92  
              _TRISDbits 000F95              ___fldiv@grs 0022              ___fldiv@rem 001B  
            ___flmul@grs 0035               LCDGoto@row 0006          WriteNibble@data 0001  
            _WriteNibble 1EE4      start_initialization 1FA8            ??_LCDWriteStr 0009  
      __size_of_ReadByte 0030    __end_of_LCDWriteFloat 1C5E                 ?_LCDInit 0001  
               ?_LCDGoto 0006                ___fldiv@a 0013                ___fldiv@b 000F  
          WriteByte@data 0004                ___flmul@a 002C                ___flmul@b 0028  
          __pcstackBANK0 0060                _WriteByte 1F7C        __size_of___xxtofl 01B4  
         LCDPutChar@data 0006      __end_of_LCDWriteStr 1DA2     LCDWriteFloat@integer 005B  
               ?_WaitLCD 0001         ___lwdiv@dividend 0001       LCDWriteFloat@value 0051  
       LCDWriteFloat@row 0050                 ?___fldiv 000F                 ?___flmul 0028  
               ?___fltol 0041                 ?___lwdiv 0001                 ?___lwmod 004B  
            __smallconst 1000               ?_WriteByte 0004         ___lwdiv@quotient 0005  
               _LATDbits 000F8C              _LCDGoto$230 0009         __size_of_LCDInit 00E8  
       __size_of_LCDGoto 006A              _LCDWriteStr 1D26                 _ReadByte 1F30  
               __Hrparam 0000                 __Lrparam 0000         __size_of_WaitLCD 001C  
       __size_of___fldiv 039A             ?_WriteNibble 0001         __size_of___flmul 042A  
       __size_of___fltol 0106         __size_of___lwdiv 0074         __size_of___lwmod 0064  
               ___xxtofl 17E4                 _main$893 0060          ___lwdiv@divisor 0003  
            ??_WriteByte 0005          ___lwdiv@counter 0007                 __ptext10 1E16  
               __ptext11 1F7C                 __ptext12 1A9E                 __ptext13 1EE4  
               __ptext14 1F60                 __ptext15 1F30            __size_of_main 00C8  
         ReadByte@status 0001               _LCDPutChar 1F96         ___lwmod@dividend 004B  
        ___lwmod@divisor 004D          ___lwmod@counter 004F   __size_of_LCDWriteFloat 00D8  
